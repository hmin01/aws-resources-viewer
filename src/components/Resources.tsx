import React, { useMemo } from 'react';
// Component
import { Col, Row } from 'antd';
import { PageHeader } from './Layout';
import { StyledContainerMargin } from './styles/Layout';
import { StyledResourceDescription, StyledResourceItem, StyledResourceList } from './styles/List';
import { StyledECSClusterCard } from './styles/Card';

/** [Internal Component] 서비스 리소스 */
const Resources: React.FC<any> = ({ data, onClearForService, service, serviceDF }): JSX.Element => {
  return (
    <StyledContainerMargin>
      <PageHeader onBack={onClearForService} subtitle={serviceDF[service].full} title={serviceDF[service].main} />
      <ResourceList resources={data} service={service} />
    </StyledContainerMargin>
  );
}

/** [Internal Component] 리소스 목록 */
const ResourceList: React.FC<any> = ({ resources, service }): JSX.Element => {
  return (
    <>
      {service === 'ecs' ? (
        <div>
          {resources !== null ? resources.map((resource: any, index: number): JSX.Element => (
            <ECS key={index} resource={resource} />
          )) : (<div style={{ padding: 20 }}>사용 중인 리소스가 없습니다.</div>)}
        </div>
      ) : (
        <StyledResourceList>
          {resources !== null ? resources.map((resource: any, index: number): JSX.Element => {
            switch (service) {
              case 'apigateway':
                return (<ApiGateway key={index} resource={resource} />);
              case 'cloudfront':
                return (<CloudFront key={index} resource={resource} />);
              case 'cognito':
                return (<Cognito key={index} resource={resource} />);
              case 'dynamodb':
                return (<DynamoDB key={index} resource={resource} />);
              case 'ebs':
                return (<EBS key={index} resource={resource} />);
              case 'ec2':
                return (<EC2 key={index} resource={resource} />);
              case 'ecr':
                return (<ECR key={index} resource={resource} />);
              case 'efs':
                return (<EFS key={index} resource={resource} />);
              case 'elasticache':
                return (<Elasticache key={index} resource={resource} />);
              case 'elasticbeanstalk':
                return (<ElasticBeanstalk key={index} resource={resource} />);
              case 'elb':
                return (<ELB key={index} resource={resource} />);
              case 'eventbridge':
                return (<EventBridge key={index} resource={resource} />);
              case 'lambda':
                return (<Lambda key={index} resource={resource} />);
              case 'qldb':
                return (<QLDB key={index} resource={resource} />);
              case 'rds':
                return (<RDS key={index} resource={resource} />);
              case 's3':
                return (<S3 key={index} resource={resource} />);
              case 'ses':
                return (<SES key={index} resource={resource} />);
              case 'sns':
                return (<SNS key={index} resource={resource} />);
              case 'sqs':
                return (<SQS key={index} resource={resource} />);
              default:
                return (<></>);
            }
          }) : (<div style={{ padding: 20 }}>사용 중인 리소스가 없습니다.</div>)}
        </StyledResourceList>
      )}
    </>
  );
}
/** [Internal Component] ApiGateway */
const ApiGateway: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="apigateway" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M25.909,24.955 L27.817,24.955 L27.817,23.046 L25.909,23.046 L25.909,24.955 Z M23.045,24.955 L24.954,24.955 L24.954,23.046 L23.045,23.046 L23.045,24.955 Z M20.182,24.955 L22.091,24.955 L22.091,23.046 L20.182,23.046 L20.182,24.955 Z M37.318,31.003 L30.728,36.802 L30.728,11.332 L37.318,17.13 L37.318,31.003 Z M30.944,8.926 C30.74,8.839 29.856,8.579 29.242,8.92 L28.728,9.205 L28.728,38.929 L29.242,39.214 C29.471,39.341 29.737,39.385 29.993,39.385 C30.421,39.385 30.816,39.263 30.944,39.208 L31.092,39.146 L38.565,32.569 C39.028,32.299 39.318,31.813 39.318,31.284 L39.318,16.849 C39.318,16.321 39.029,15.835 38.566,15.564 L31.092,8.988 L30.944,8.926 Z M17.273,36.803 L10.682,31.004 L10.682,17.129 L17.273,11.331 L17.273,36.803 Z M17.055,8.926 L16.907,8.988 L9.432,15.565 C8.971,15.836 8.682,16.321 8.682,16.849 L8.682,31.284 C8.682,31.812 8.971,32.299 9.433,32.568 L16.907,39.146 L17.055,39.208 C17.182,39.263 17.578,39.385 18.006,39.385 C18.261,39.385 18.527,39.341 18.756,39.215 L19.273,38.93 L19.273,9.204 L18.756,8.919 C18.144,8.582 17.258,8.839 17.055,8.926 L17.055,8.926 Z M44,32.284 L32.284,44 L15.715,44 L4,32.284 L4,15.716 L15.715,4 L32.284,4 L44,15.716 L44,32.284 Z M33.112,2 L14.887,2 L2,14.888 L2,33.112 L14.887,46 L33.112,46 L46,33.112 L46,14.888 L33.112,2 Z" id="AWS-Amazon-API-Gateway_Endpoint_Resource-Icon_light-bg" fill="#B0084D"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>API Gateway</Description>
          </Col>
          <Col span={6}>
            <Description label='Id'>{resource.id}</Description>
          </Col>
          <Col span={6}>
            <Description label='Rest API'>{resource.isRest ? 'true' : 'false'}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] CloudFront */
const CloudFront: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
      <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <g id="cloudfront" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
          <path d="M15.9581,27.6694 L17.3721,29.0834 L15.9581,30.4974 L14.5441,29.0834 L15.9581,27.6694 Z M18.8531,30.5644 L21.8131,33.5244 L20.3991,34.9394 L17.4381,31.9784 L18.8531,30.5644 Z M29.1501,30.5644 L30.5641,31.9784 L27.6041,34.9394 L26.1891,33.5244 L29.1501,30.5644 Z M32.0451,27.6694 L33.4591,29.0834 L32.0451,30.4974 L30.6311,29.0834 L32.0451,27.6694 Z M25.0011,35.2984 L26.1221,36.4194 L24.7081,37.8344 C24.5131,38.0294 24.2571,38.1274 24.0011,38.1274 C23.7451,38.1274 23.4891,38.0294 23.2941,37.8344 L21.8801,36.4194 L23.0011,35.2984 L23.0011,34.2524 L25.0011,34.2524 L25.0011,35.2984 Z M23.0011,16.4624 L25.0011,16.4624 L25.0011,12.9044 L23.0011,12.9044 L23.0011,16.4624 Z M23.0011,21.7994 L25.0011,21.7994 L25.0011,18.2414 L23.0011,18.2414 L23.0011,21.7994 Z M23.0011,27.1364 L25.0011,27.1364 L25.0011,23.5784 L23.0011,23.5784 L23.0011,27.1364 Z M23.0011,32.4734 L25.0011,32.4734 L25.0011,28.9154 L23.0011,28.9154 L23.0011,32.4734 Z M23.0011,11.1254 L25.0011,11.1254 L25.0011,9.1254 L23.0011,9.1254 L23.0011,11.1254 Z M24.0011,44.0024 C12.9731,44.0024 4.0001,35.0294 4.0001,24.0014 C4.0001,12.9724 12.9731,4.0004 24.0011,4.0004 C35.0291,4.0004 44.0021,12.9724 44.0021,24.0014 C44.0021,35.0294 35.0291,44.0024 24.0011,44.0024 L24.0011,44.0024 Z M24.0011,2.0004 C11.8691,2.0004 2.0001,11.8694 2.0001,24.0014 C2.0001,36.1324 11.8691,46.0024 24.0011,46.0024 C36.1331,46.0024 46.0021,36.1324 46.0021,24.0014 C46.0021,11.8694 36.1331,2.0004 24.0011,2.0004 L24.0011,2.0004 Z" id="AWS-Amazon-CloudFront_Download-distribution_Resource-Icon_light-bg" fill="#4D27AA"></path>
        </g>
      </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.id}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>Distribution</Description>
          </Col>
          <Col span={8}>
            <Description label='Domain'>{resource.domain}</Description>
          </Col>
          <Col span={6}>
            <Description label='HTTP Version'>{resource.httpVersion}</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
          <>
            {resource.origins !== null ? (
              <Col span={24}>
                <Description label='Origins'>{resource.origins.map((origin: any): string => `${origin.name} (${origin.domain})`)}</Description>
              </Col>
            ) : (<></>)}
          </>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] Cognito */
const Cognito: React.FC<any> = ({ resource }): JSX.Element => {
  console.log(resource)
  return (
    <StyledResourceItem>
      <div className='icon'>
      <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <g id="cognito" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
          <path d="M28.639,9.286 C28.639,6.371 31.052,4 34.019,4 C36.985,4 39.397,6.371 39.397,9.286 C39.397,12.201 36.985,14.572 34.019,14.572 C31.052,14.572 28.639,12.201 28.639,9.286 L28.639,9.286 Z M40.163,16.334 C39.516,15.932 38.833,15.6 38.128,15.333 C40.098,14.023 41.397,11.802 41.397,9.286 C41.397,5.269 38.087,2 34.019,2 C29.95,2 26.639,5.269 26.639,9.286 C26.639,11.796 27.932,14.014 29.895,15.325 C28.614,15.808 27.41,16.515 26.349,17.425 L27.652,18.943 C29.434,17.414 31.689,16.572 34,16.572 C35.802,16.572 37.569,17.077 39.109,18.033 C41.849,19.735 43.647,22.725 43.953,26 L34,26 L34,28 L45,28 C45.553,28 46,27.553 46,27 C46,22.657 43.764,18.57 40.163,16.334 L40.163,16.334 Z M8.639,9.286 C8.639,6.371 11.052,4 14.019,4 C16.985,4 19.397,6.371 19.397,9.286 C19.397,12.201 16.985,14.572 14.019,14.572 C11.052,14.572 8.639,12.201 8.639,9.286 L8.639,9.286 Z M14,26 L4.046,26 C4.53,20.717 8.81,16.572 14,16.572 C15.802,16.572 17.569,17.077 19.109,18.033 C19.541,18.302 19.958,18.608 20.349,18.943 L21.652,17.426 C21.184,17.024 20.684,16.657 20.163,16.334 C19.516,15.932 18.833,15.6 18.128,15.333 C20.098,14.023 21.397,11.802 21.397,9.286 C21.397,5.269 18.087,2 14.019,2 C9.95,2 6.639,5.269 6.639,9.286 C6.639,11.801 7.937,14.023 9.907,15.332 C5.302,17.071 2,21.638 2,27 C2,27.553 2.448,28 3,28 L14,28 L14,26 Z M14.046,44 C14.53,38.717 18.81,34.572 24,34.572 C25.802,34.572 27.569,35.077 29.109,36.033 C31.849,37.735 33.647,40.725 33.953,44 L14.046,44 Z M18.639,27.286 C18.639,24.371 21.052,22 24.019,22 C26.985,22 29.397,24.371 29.397,27.286 C29.397,30.201 26.985,32.572 24.019,32.572 C21.052,32.572 18.639,30.201 18.639,27.286 L18.639,27.286 Z M30.163,34.334 C29.516,33.932 28.833,33.6 28.128,33.333 C30.098,32.023 31.397,29.802 31.397,27.286 C31.397,23.269 28.087,20 24.019,20 C19.95,20 16.639,23.269 16.639,27.286 C16.639,29.801 17.937,32.023 19.907,33.332 C15.302,35.071 12,39.638 12,45 C12,45.553 12.448,46 13,46 L35,46 C35.553,46 36,45.553 36,45 C36,40.657 33.764,36.57 30.163,34.334 L30.163,34.334 Z" id="Fill-1" fill="#242F3E"></path>
        </g>
      </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>User Pool</Description>
          </Col>
          <Col span={10}>
            <Description label='Uuid'>{resource.id}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] DynamoDB */
const DynamoDB: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
      <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <g id="dynamodb" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
          <path d="M13.355,11.862 L45.928,11.862 L45.928,2 L13.355,2 L13.355,11.862 Z M15.355,9.862 L43.927,9.862 L43.927,4.001 L15.355,4.001 L15.355,9.862 Z M2,11.862 L11.861,11.862 L11.861,2 L2,2 L2,11.862 Z M4,9.862 L9.862,9.862 L9.862,4.001 L4,4.001 L4,9.862 Z M13.355,23.217 L45.928,23.217 L45.928,13.356 L13.355,13.356 L13.355,23.217 Z M15.355,21.217 L43.927,21.217 L43.927,15.356 L15.355,15.356 L15.355,21.217 Z M2,23.217 L11.861,23.217 L11.861,13.356 L2,13.356 L2,23.217 Z M4,21.217 L9.862,21.217 L9.862,15.356 L4,15.356 L4,21.217 Z M13.355,34.572 L45.928,34.572 L45.928,24.711 L13.355,24.711 L13.355,34.572 Z M15.355,32.572 L43.927,32.572 L43.927,26.71 L15.355,26.71 L15.355,32.572 Z M2,34.572 L11.861,34.572 L11.861,24.711 L2,24.711 L2,34.572 Z M4,32.572 L9.862,32.572 L9.862,26.71 L4,26.71 L4,32.572 Z M13.355,45.927 L45.928,45.927 L45.928,36.066 L13.355,36.066 L13.355,45.927 Z M15.355,43.928 L43.927,43.928 L43.927,38.066 L15.355,38.066 L15.355,43.928 Z M2,45.927 L11.861,45.927 L11.861,36.066 L2,36.066 L2,45.927 Z M4,43.928 L9.862,43.928 L9.862,38.066 L4,38.066 L4,43.928 Z" id="Amazon-DATABASE_Amazon-DynamoDB_Table_Resource-Icon_light-bg" fill="#2E27AD"></path>
        </g>
      </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>Table</Description>
          </Col>
          <Col span={10}>
            <Description label='Uuid'>{resource.id}</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] EBS */
const EBS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
      <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <g id="ebs" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
          <path d="M13.4185,4 L33.8805,4 L38.2965,9.873 L9.0035,9.873 L13.4185,4 Z M7.0005,11.873 L40.2995,11.873 C40.6785,11.873 41.0245,11.659 41.1935,11.319 C41.3635,10.98 41.3265,10.575 41.0985,10.272 L35.1785,2.399 C34.9895,2.147 34.6935,2 34.3795,2 L12.9195,2 C12.6055,2 12.3095,2.147 12.1205,2.399 L6.2015,10.272 C5.9735,10.575 5.9365,10.98 6.1065,11.319 C6.2745,11.659 6.6215,11.873 7.0005,11.873 L7.0005,11.873 Z M8.0605,43.985 L39.2995,43.985 L39.2995,15.371 L8.0605,15.371 L8.0605,43.985 Z M40.2995,13.371 L7.0605,13.371 C6.5075,13.371 6.0605,13.818 6.0605,14.371 L6.0605,44.985 C6.0605,45.538 6.5075,45.985 7.0605,45.985 L40.2995,45.985 C40.8525,45.985 41.2995,45.538 41.2995,44.985 L41.2995,14.371 C41.2995,13.818 40.8525,13.371 40.2995,13.371 L40.2995,13.371 Z" id="AWS-Amazon-Elastic-Block-Store_Volumes_Resource-Icon_light-bg" fill="#3F8624"></path>
        </g>
      </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.id}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Volume</Description>
          </Col>
          <Col span={6}>
            <Description label='Type'>{resource.type}</Description>
          </Col>
          <Col span={6}>
            <Description label='Size'>{resource.size} GB</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] EC2 */
const EC2: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="ec2" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M9,39 L39,39 L39,9 L9,9 L9,39 Z M46,13 L46,11 L41,11 L41,8 C41,7.448 40.552,7 40,7 L37,7 L37,2 L35,2 L35,7 L31,7 L31,2 L29,2 L29,7 L25,7 L25,2 L23,2 L23,7 L19,7 L19,2 L17,2 L17,7 L13,7 L13,2 L11,2 L11,7 L8,7 C7.447,7 7,7.448 7,8 L7,11 L2,11 L2,13 L7,13 L7,17 L2,17 L2,19 L7,19 L7,23 L2,23 L2,25 L7,25 L7,29 L2,29 L2,31 L7,31 L7,35 L2,35 L2,37 L7,37 L7,40 C7,40.553 7.447,41 8,41 L11,41 L11,46 L13,46 L13,41 L17,41 L17,46 L19,46 L19,41 L23,41 L23,46 L25,46 L25,41 L29,41 L29,46 L31,46 L31,41 L35,41 L35,46 L37,46 L37,41 L40,41 C40.552,41 41,40.553 41,40 L41,37 L46,37 L46,35 L41,35 L41,31 L46,31 L46,29 L41,29 L41,25 L46,25 L46,23 L41,23 L41,19 L46,19 L46,17 L41,17 L41,13 L46,13 Z" id="Amazon-EC2-Instance_Resource-Icon_light-bg" fill="#D45B07"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.id}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Instance</Description>
          </Col>
          <Col span={6}>
            <Description label='Type'>{resource.type}</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] ECR */
const ECR: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="ecr" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M35.207,37.954 L37.207,37.954 L37.207,34.459 L35.207,34.459 L35.207,37.954 Z M31.711,37.954 L33.711,37.954 L33.711,34.459 L31.711,34.459 L31.711,37.954 Z M28.216,37.954 L30.216,37.954 L30.216,34.459 L28.216,34.459 L28.216,37.954 Z M26.721,39.576 L38.702,39.576 L38.702,32.837 L26.721,32.837 L26.721,39.576 Z M39.702,30.837 L25.72,30.837 C25.168,30.837 24.72,31.284 24.72,31.837 L24.72,40.576 C24.72,41.129 25.168,41.576 25.72,41.576 L39.702,41.576 C40.255,41.576 40.702,41.129 40.702,40.576 L40.702,31.837 C40.702,31.284 40.255,30.837 39.702,30.837 L39.702,30.837 Z M35.207,25.721 L37.207,25.721 L37.207,22.225 L35.207,22.225 L35.207,25.721 Z M31.711,25.721 L33.711,25.721 L33.711,22.225 L31.711,22.225 L31.711,25.721 Z M28.216,25.721 L30.216,25.721 L30.216,22.225 L28.216,22.225 L28.216,25.721 Z M26.721,27.342 L38.702,27.342 L38.702,20.604 L26.721,20.604 L26.721,27.342 Z M39.702,18.604 L25.72,18.604 C25.168,18.604 24.72,19.051 24.72,19.604 L24.72,28.342 C24.72,28.895 25.168,29.342 25.72,29.342 L39.702,29.342 C40.255,29.342 40.702,28.895 40.702,28.342 L40.702,19.604 C40.702,19.051 40.255,18.604 39.702,18.604 L39.702,18.604 Z M35.207,13.486 L37.207,13.486 L37.207,9.991 L35.207,9.991 L35.207,13.486 Z M31.711,13.486 L33.711,13.486 L33.711,9.991 L31.711,9.991 L31.711,13.486 Z M28.216,13.486 L30.216,13.486 L30.216,9.991 L28.216,9.991 L28.216,13.486 Z M26.721,15.108 L38.702,15.108 L38.702,8.369 L26.721,8.369 L26.721,15.108 Z M39.702,6.369 L25.72,6.369 C25.168,6.369 24.72,6.817 24.72,7.369 L24.72,16.108 C24.72,16.661 25.168,17.108 25.72,17.108 L39.702,17.108 C40.255,17.108 40.702,16.661 40.702,16.108 L40.702,7.369 C40.702,6.817 40.255,6.369 39.702,6.369 L39.702,6.369 Z M17.729,37.954 L19.729,37.954 L19.729,34.459 L17.729,34.459 L17.729,37.954 Z M14.234,37.954 L16.234,37.954 L16.234,34.459 L14.234,34.459 L14.234,37.954 Z M10.738,37.954 L12.738,37.954 L12.738,34.459 L10.738,34.459 L10.738,37.954 Z M9.243,39.576 L21.224,39.576 L21.224,32.837 L9.243,32.837 L9.243,39.576 Z M22.224,30.837 L8.243,30.837 C7.69,30.837 7.243,31.284 7.243,31.837 L7.243,40.576 C7.243,41.129 7.69,41.576 8.243,41.576 L22.224,41.576 C22.777,41.576 23.224,41.129 23.224,40.576 L23.224,31.837 C23.224,31.284 22.777,30.837 22.224,30.837 L22.224,30.837 Z M17.729,25.721 L19.729,25.721 L19.729,22.225 L17.729,22.225 L17.729,25.721 Z M14.234,25.721 L16.234,25.721 L16.234,22.225 L14.234,22.225 L14.234,25.721 Z M10.738,25.721 L12.738,25.721 L12.738,22.225 L10.738,22.225 L10.738,25.721 Z M9.243,27.342 L21.224,27.342 L21.224,20.604 L9.243,20.604 L9.243,27.342 Z M22.224,18.604 L8.243,18.604 C7.69,18.604 7.243,19.051 7.243,19.604 L7.243,28.342 C7.243,28.895 7.69,29.342 8.243,29.342 L22.224,29.342 C22.777,29.342 23.224,28.895 23.224,28.342 L23.224,19.604 C23.224,19.051 22.777,18.604 22.224,18.604 L22.224,18.604 Z M17.729,13.486 L19.729,13.486 L19.729,9.991 L17.729,9.991 L17.729,13.486 Z M14.234,13.486 L16.234,13.486 L16.234,9.991 L14.234,9.991 L14.234,13.486 Z M10.738,13.486 L12.738,13.486 L12.738,9.991 L10.738,9.991 L10.738,13.486 Z M9.243,15.108 L21.224,15.108 L21.224,8.369 L9.243,8.369 L9.243,15.108 Z M22.224,6.369 L8.243,6.369 C7.69,6.369 7.243,6.817 7.243,7.369 L7.243,16.108 C7.243,16.661 7.69,17.108 8.243,17.108 L22.224,17.108 C22.777,17.108 23.224,16.661 23.224,16.108 L23.224,7.369 C23.224,6.817 22.777,6.369 22.224,6.369 L22.224,6.369 Z M43.945,39.497 C43.945,41.95 41.95,43.945 39.497,43.945 L8.448,43.945 C5.995,43.945 4,41.95 4,39.497 L4,8.448 C4,5.995 5.995,4 8.448,4 L39.497,4 C41.95,4 43.945,5.995 43.945,8.448 L43.945,39.497 Z M39.497,2 L8.448,2 C4.892,2 2,4.893 2,8.448 L2,39.497 C2,43.053 4.892,45.945 8.448,45.945 L39.497,45.945 C43.053,45.945 45.945,43.053 45.945,39.497 L45.945,8.448 C45.945,4.893 43.053,2 39.497,2 L39.497,2 Z" id="Amazon-Elastic-Container-Registry-Registry_Resource-Icon_light-bg" fill="#D45B07"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>Repository</Description>
          </Col>
          <Col span={8}>
            <Description label='Name'>{resource.name}</Description>
          </Col>
          <Col span={12}>
            <Description label='Arn'>{resource.arn}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] ECS */
const ECS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledECSClusterCard>
      <div className='header'>
        <h3 className='name'>{resource.name}</h3>
        <label className='desc'>Cluster</label>
      </div>
      <>{resource.services !== null ? resource.services.map((service: any): JSX.Element => (
        <StyledResourceItem key={service}>
          <div className='icon'>
            <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
              <g id="ecs" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <path d="M24.933,38.213 L37.674,38.213 L37.674,36.213 L24.933,36.213 L24.933,38.213 Z M24.933,28.303 L37.674,28.303 L37.674,26.303 L24.933,26.303 L24.933,28.303 Z M24.933,18.393 L37.674,18.393 L37.674,16.393 L24.933,16.393 L24.933,18.393 Z M19.561,38.337 L21.808,38.337 L21.808,36.09 L19.561,36.09 L19.561,38.337 Z M18.561,40.337 L22.808,40.337 C23.361,40.337 23.808,39.89 23.808,39.337 L23.808,35.09 C23.808,34.537 23.361,34.09 22.808,34.09 L18.561,34.09 C18.009,34.09 17.561,34.537 17.561,35.09 L17.561,39.337 C17.561,39.89 18.009,40.337 18.561,40.337 L18.561,40.337 Z M19.561,28.427 L21.808,28.427 L21.808,26.18 L19.561,26.18 L19.561,28.427 Z M18.561,30.427 L22.808,30.427 C23.361,30.427 23.808,29.98 23.808,29.427 L23.808,25.18 C23.808,24.627 23.361,24.18 22.808,24.18 L18.561,24.18 C18.009,24.18 17.561,24.627 17.561,25.18 L17.561,29.427 C17.561,29.98 18.009,30.427 18.561,30.427 L18.561,30.427 Z M19.561,18.517 L21.808,18.517 L21.808,16.27 L19.561,16.27 L19.561,18.517 Z M18.561,20.517 L22.808,20.517 C23.361,20.517 23.808,20.07 23.808,19.517 L23.808,15.27 C23.808,14.717 23.361,14.27 22.808,14.27 L18.561,14.27 C18.009,14.27 17.561,14.717 17.561,15.27 L17.561,19.517 C17.561,20.07 18.009,20.517 18.561,20.517 L18.561,20.517 Z M16.023,44 L39.506,44 L39.506,12.022 L16.023,12.022 L16.023,44 Z M14.022,11.023 L14.022,39.753 L11.775,39.753 L11.775,7.776 L35.259,7.776 L35.259,10.023 L15.022,10.023 C14.469,10.023 14.022,10.47 14.022,11.023 L14.022,11.023 Z M9.775,6.776 L9.775,35.978 L8,35.978 L8,4 L31.483,4 L31.483,5.776 L10.775,5.776 C10.222,5.776 9.775,6.223 9.775,6.776 L9.775,6.776 Z M40.506,10.023 L37.259,10.023 L37.259,6.776 C37.259,6.223 36.811,5.776 36.259,5.776 L33.483,5.776 L33.483,3 C33.483,2.448 33.036,2 32.483,2 L7,2 C6.447,2 6,2.448 6,3 L6,36.978 C6,37.531 6.447,37.978 7,37.978 L9.775,37.978 L9.775,40.753 C9.775,41.306 10.222,41.753 10.775,41.753 L14.022,41.753 L14.022,45 C14.022,45.553 14.469,46 15.022,46 L40.506,46 C41.058,46 41.506,45.553 41.506,45 L41.506,11.023 C41.506,10.47 41.058,10.023 40.506,10.023 L40.506,10.023 Z" id="Amazon-Elastic-Container-Service_Service_Resource-Icon_light-bg" fill="#D45B07"></path>
              </g>
            </svg>
          </div>
          <div className='content'>
            <h4 className='subject'>{service.name}</h4>
            <Row gutter={[8, 6]}>
              <Col span={6}>
                <Description label='Category'>Service</Description>
              </Col>
              <Col span={6}>
                <Description label='Launch Type'>{service.launchType}</Description>
              </Col>
              <Col span={6}>
                <Description label='Status'>{service.status}</Description>
              </Col>
              <Col span={6}>
                <Description label='Task Count'>{service.tasksCount ? service.tasksCount.running : 0}</Description>
              </Col>
            </Row>
          </div>
        </StyledResourceItem>
      )) : (<p className='empty'>등록된 서비스가 없습니다.</p>)}</>
    </StyledECSClusterCard>
  );
}
/** [Internal Component] EFS */
const EFS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="efs" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M37.2366623,11.621 L42.2336623,11.621 L42.2336623,6.624 L37.2366623,6.624 L37.2366623,11.621 Z M36.1116623,13.595 L36.1116623,15.245 L38.1116623,15.245 L38.1116623,13.621 L38.7356623,13.621 L38.7356623,15.245 L40.7356623,15.245 L40.7356623,13.621 L41.3596623,13.621 L41.3596623,15.245 L43.3596623,15.245 L43.3596623,13.595 C43.8066623,13.537 44.1496623,13.193 44.2076623,12.746 L45.8576623,12.746 L45.8576623,10.746 L44.2336623,10.746 L44.2336623,10.123 L45.8576623,10.123 L45.8576623,8.123 L44.2336623,8.123 L44.2336623,7.499 L45.8576623,7.499 L45.8576623,5.499 L44.2076623,5.499 C44.1496623,5.051 43.8066623,4.708 43.3596623,4.649 L43.3596623,3 L41.3596623,3 L41.3596623,4.624 L40.7356623,4.624 L40.7356623,3 L38.7356623,3 L38.7356623,4.624 L38.1116623,4.624 L38.1116623,3 L36.1116623,3 L36.1116623,4.649 C35.6626623,4.708 35.3206623,5.05 35.2616623,5.499 L33.6126623,5.499 L33.6126623,7.499 L35.2366623,7.499 L35.2366623,8.123 L33.6126623,8.123 L33.6126623,10.123 L35.2366623,10.123 L35.2366623,10.746 L33.6126623,10.746 L33.6126623,12.746 L35.2616623,12.746 C35.3206623,13.194 35.6626623,13.537 36.1116623,13.595 L36.1116623,13.595 Z M22.3676623,11.621 L27.3646623,11.621 L27.3646623,6.624 L22.3676623,6.624 L22.3676623,11.621 Z M21.2426623,13.595 L21.2426623,15.245 L23.2426623,15.245 L23.2426623,13.621 L23.8666623,13.621 L23.8666623,15.245 L25.8666623,15.245 L25.8666623,13.621 L26.4906623,13.621 L26.4906623,15.245 L28.4906623,15.245 L28.4906623,13.595 C28.9376623,13.537 29.2806623,13.193 29.3386623,12.746 L30.9886623,12.746 L30.9886623,10.746 L29.3646623,10.746 L29.3646623,10.123 L30.9886623,10.123 L30.9886623,8.123 L29.3646623,8.123 L29.3646623,7.499 L30.9886623,7.499 L30.9886623,5.499 L29.3386623,5.499 C29.2806623,5.051 28.9376623,4.708 28.4906623,4.649 L28.4906623,3 L26.4906623,3 L26.4906623,4.624 L25.8666623,4.624 L25.8666623,3 L23.8666623,3 L23.8666623,4.624 L23.2426623,4.624 L23.2426623,3 L21.2426623,3 L21.2426623,4.649 C20.7936623,4.708 20.4506623,5.05 20.3926623,5.499 L18.7426623,5.499 L18.7426623,7.499 L20.3676623,7.499 L20.3676623,8.123 L18.7426623,8.123 L18.7426623,10.123 L20.3676623,10.123 L20.3676623,10.746 L18.7426623,10.746 L18.7426623,12.746 L20.3926623,12.746 C20.4506623,13.194 20.7936623,13.537 21.2426623,13.595 L21.2426623,13.595 Z M7.49866234,11.621 L12.4956623,11.621 L12.4956623,6.624 L7.49866234,6.624 L7.49866234,11.621 Z M6.37266234,13.595 L6.37266234,15.245 L8.37266234,15.245 L8.37266234,13.621 L8.99666234,13.621 L8.99666234,15.245 L10.9966623,15.245 L10.9966623,13.621 L11.6206623,13.621 L11.6206623,15.245 L13.6206623,15.245 L13.6206623,13.595 C14.0696623,13.537 14.4116623,13.194 14.4706623,12.746 L16.1196623,12.746 L16.1196623,10.746 L14.4956623,10.746 L14.4956623,10.123 L16.1196623,10.123 L16.1196623,8.123 L14.4956623,8.123 L14.4956623,7.499 L16.1196623,7.499 L16.1196623,5.499 L14.4706623,5.499 C14.4116623,5.05 14.0696623,4.708 13.6206623,4.649 L13.6206623,3 L11.6206623,3 L11.6206623,4.624 L10.9966623,4.624 L10.9966623,3 L8.99666234,3 L8.99666234,4.624 L8.37266234,4.624 L8.37266234,3 L6.37266234,3 L6.37266234,4.649 C5.92566234,4.708 5.58166234,5.051 5.52466234,5.499 L3.87466234,5.499 L3.87466234,7.499 L5.49866234,7.499 L5.49866234,8.123 L3.87466234,8.123 L3.87466234,10.123 L5.49866234,10.123 L5.49866234,10.746 L3.87466234,10.746 L3.87466234,12.746 L5.52466234,12.746 C5.58166234,13.193 5.92566234,13.537 6.37266234,13.595 L6.37266234,13.595 Z M37.3346623,28.477 L43.4426623,42.23 L10.6516623,42.23 L4.53866234,28.477 L37.3346623,28.477 Z M6.87666234,24.979 L39.8116623,24.979 L41.7386623,33.463 L38.8996623,27.071 C38.7396623,26.709 38.3806623,26.477 37.9856623,26.477 L7.21766234,26.477 L6.87666234,24.979 Z M10.9966623,22.361 C10.9966623,21.828 11.4186623,21.393 11.9386623,21.393 L31.4436623,21.393 C31.9956623,21.393 32.4436623,20.946 32.4436623,20.393 L32.4436623,18.25 C32.4436623,18.092 32.5546623,17.973 32.7026623,17.973 L36.9456623,17.973 C37.0956623,17.973 37.2126623,18.094 37.2126623,18.25 L37.2126623,20.393 C37.2126623,20.946 37.6596623,21.393 38.2126623,21.393 L43.0406623,21.393 C43.5606623,21.393 43.9826623,21.828 43.9826623,22.361 L43.9826623,34.311 L41.5846623,23.757 C41.4816623,23.302 41.0756623,22.979 40.6096623,22.979 L10.9966623,22.979 L10.9966623,22.361 Z M43.0406623,19.393 L39.2126623,19.393 L39.2126623,18.25 C39.2126623,16.995 38.1956623,15.973 36.9456623,15.973 L32.7026623,15.973 C31.4566623,15.973 30.4436623,16.995 30.4436623,18.25 L30.4436623,19.393 L11.9386623,19.393 C10.3166623,19.393 8.99666234,20.724 8.99666234,22.361 L8.99666234,22.979 L5.62366234,22.979 C5.31966234,22.979 5.03266234,23.118 4.84266234,23.355 C4.65266234,23.593 4.58066234,23.904 4.64966234,24.201 L5.16666234,26.477 L2.99966234,26.477 C2.66066234,26.477 2.34566234,26.648 2.16066234,26.932 C1.97766234,27.216 1.94866234,27.574 2.08566234,27.883 L9.07266234,43.604 C9.22066234,43.97 9.57666234,44.23 9.99666234,44.23 L44.9826623,44.23 C45.5346623,44.23 45.9826623,43.783 45.9826623,43.23 L45.9826623,22.361 C45.9826623,20.724 44.6626623,19.393 43.0406623,19.393 L43.0406623,19.393 Z" id="AWS-Amazon-Elastic-File-System_File-system_Resource-Icon_light-bg" fill="#3F8624"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>FileSystem</Description>
          </Col>
          <Col span={6}>
            <Description label='Uuid'>{resource.id}</Description>
          </Col>
          <Col span={6}>
            <Description label='Size'>{resource.size} MB</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] Elasticache */
const Elasticache: React.FC<any> = ({ resource }): JSX.Element => {
  // Icon (유형에 따라)
  const icon: JSX.Element = useMemo(() => {
    switch (resource.engine) {
      case 'memcached':
        return (<path d="M43.4482,11.4629 C43.4482,12.2819 44.1192,12.9479 44.9442,12.9479 C45.4972,12.9479 45.9442,13.3959 45.9442,13.9479 L45.9442,29.8569 C45.9442,30.4089 45.4972,30.8569 44.9442,30.8569 L37.1772,30.8569 L37.1772,28.8569 L40.8382,28.8569 L40.8382,26.9729 L37.1772,26.9729 L37.1772,24.9729 L41.8382,24.9729 C42.3902,24.9729 42.8382,25.4199 42.8382,25.9729 L42.8382,28.8569 L43.9442,28.8569 L43.9442,14.8029 C42.5022,14.3729 41.4482,13.0379 41.4482,11.4629 C41.4482,9.8879 42.5022,8.5529 43.9442,8.1229 L43.9442,5.9999 L4.0002,5.9999 L4.0002,8.1229 C5.4422,8.5529 6.4962,9.8879 6.4962,11.4629 C6.4962,13.0379 5.4422,14.3729 4.0002,14.8029 L4.0002,28.8569 L5.1062,28.8569 L5.1062,25.9729 C5.1062,25.4199 5.5532,24.9729 6.1062,24.9729 L10.7672,24.9729 L10.7672,26.9729 L7.1062,26.9729 L7.1062,28.8569 L10.7672,28.8569 L10.7672,30.8569 L3.0002,30.8569 C2.4472,30.8569 2.0002,30.4089 2.0002,29.8569 L2.0002,13.9479 C2.0002,13.3959 2.4472,12.9479 3.0002,12.9479 C3.8252,12.9479 4.4962,12.2819 4.4962,11.4629 C4.4962,10.6439 3.8252,9.9779 3.0002,9.9779 C2.4472,9.9779 2.0002,9.5299 2.0002,8.9779 L2.0002,4.9999 C2.0002,4.4469 2.4472,3.9999 3.0002,3.9999 L44.9442,3.9999 C45.4972,3.9999 45.9442,4.4469 45.9442,4.9999 L45.9442,8.9779 C45.9442,9.5299 45.4972,9.9779 44.9442,9.9779 C44.1192,9.9779 43.4482,10.6439 43.4482,11.4629 L43.4482,11.4629 Z M27.5932,27.3089 L29.8482,27.3089 L29.8482,39.1509 L27.9342,39.1509 L27.9342,30.2819 L24.8582,36.1779 L22.9792,36.1779 L20.0052,30.3169 L20.0052,39.1509 L18.0912,39.1509 L18.0912,27.3089 L20.4152,27.3089 L23.9692,34.3659 L27.5932,27.3089 Z M10.2142,21.0889 L11.5442,21.0889 L11.5442,23.0889 L9.2142,23.0889 C8.6612,23.0889 8.2142,22.6419 8.2142,22.0889 L8.2142,8.8839 C8.2142,8.3309 8.6612,7.8839 9.2142,7.8839 L13.8742,7.8839 C14.4272,7.8839 14.8742,8.3309 14.8742,8.8839 L14.8742,15.0989 L12.8742,15.0989 L12.8742,9.8839 L10.2142,9.8839 L10.2142,21.0889 Z M37.7302,21.0889 L37.7302,9.8839 L35.0702,9.8839 L35.0702,15.0989 L33.0702,15.0989 L33.0702,8.8839 C33.0702,8.3309 33.5172,7.8839 34.0702,7.8839 L38.7302,7.8839 C39.2832,7.8839 39.7302,8.3309 39.7302,8.8839 L39.7302,22.0889 C39.7302,22.6419 39.2832,23.0889 38.7302,23.0889 L37.1772,23.0889 L37.1772,21.0889 L37.7302,21.0889 Z M29.9632,14.3209 L29.9632,9.8839 L26.5252,9.8839 L26.5252,13.5449 L24.5252,13.5449 L24.5252,8.8839 C24.5252,8.3309 24.9722,7.8839 25.5252,7.8839 L30.9632,7.8839 C31.5152,7.8839 31.9632,8.3309 31.9632,8.8839 L31.9632,14.3209 L29.9632,14.3209 Z M21.4192,13.5449 L21.4192,9.8839 L17.9812,9.8839 L17.9812,14.3209 L15.9812,14.3209 L15.9812,8.8839 C15.9812,8.3309 16.4282,7.8839 16.9812,7.8839 L22.4192,7.8839 C22.9712,7.8839 23.4192,8.3309 23.4192,8.8839 L23.4192,13.5449 L21.4192,13.5449 Z M31.6892,30.1549 C32.5812,29.8739 33.2862,29.5659 33.8462,29.2439 L33.8462,33.5099 C33.8462,33.8559 33.1122,34.6009 31.0882,35.2399 L31.6892,37.1469 C32.5812,36.8649 33.2862,36.5569 33.8462,36.2349 L33.8462,40.0409 C33.8462,40.8269 30.4872,42.6709 23.9732,42.6709 C17.4582,42.6709 14.0972,40.8269 14.0972,40.0409 L14.0972,36.2359 C14.6652,36.5609 15.3782,36.8729 16.2832,37.1559 L16.8812,35.2479 C14.8392,34.6089 14.0972,33.8589 14.0972,33.5099 L14.0972,29.2449 C14.6652,29.5699 15.3782,29.8819 16.2832,30.1649 L16.8812,28.2569 C14.8392,27.6169 14.0972,26.8669 14.0972,26.5189 L14.0972,22.2079 C16.3502,23.5009 20.1822,24.1699 23.9952,24.1699 C27.7812,24.1699 31.5892,23.5099 33.8462,22.2339 L33.8462,26.5189 C33.8462,26.8639 33.1122,27.6089 31.0882,28.2489 L31.6892,30.1549 Z M23.9952,16.8239 C30.1422,16.8239 33.9042,18.5549 33.9042,19.4969 C33.9042,20.4399 30.1422,22.1699 23.9952,22.1699 C17.8442,22.1699 14.0812,20.4399 14.0812,19.4969 C14.0812,18.5549 17.8442,16.8239 23.9952,16.8239 L23.9952,16.8239 Z M23.9952,14.8239 C18.0742,14.8239 12.0972,16.4299 12.0972,19.4969 C12.0972,19.5869 12.0962,19.6939 12.0972,19.7589 L12.0972,40.0409 C12.0972,43.0799 18.0722,44.6709 23.9732,44.6709 C29.8742,44.6709 35.8662,43.0799 35.8662,40.0409 L35.8662,20.2899 C35.8712,20.1209 35.8662,19.6579 35.8662,19.4969 C35.8662,16.4299 29.9132,14.8239 23.9952,14.8239 L23.9952,14.8239 Z" id="Amazon-DATABASE_Amazon-ElastiCache_ElastiCache-for-Memcached_Resource-Icon_light-bg" fill="#2E27AD"></path>);
      default:
        return (<path d="M43.5078,11.4717 C43.5078,12.2927 44.1808,12.9607 45.0078,12.9607 C45.5608,12.9607 46.0078,13.4087 46.0078,13.9607 L46.0078,29.8937 C46.0078,30.4467 45.5608,30.8937 45.0078,30.8937 L37.2288,30.8937 L37.2288,28.8937 L40.8968,28.8937 L40.8968,27.0037 L37.2288,27.0037 L37.2288,25.0037 L41.8968,25.0037 C42.4488,25.0037 42.8968,25.4507 42.8968,26.0037 L42.8968,28.8937 L44.0078,28.8937 L44.0078,14.8157 C42.5638,14.3857 41.5078,13.0497 41.5078,11.4717 C41.5078,9.8937 42.5638,8.5577 44.0078,8.1277 L44.0078,5.9997 L3.9998,5.9997 L3.9998,8.1267 C5.4448,8.5577 6.5008,9.8937 6.5008,11.4717 C6.5008,13.0497 5.4448,14.3857 3.9998,14.8167 L3.9998,28.8937 L5.1118,28.8937 L5.1118,26.0037 C5.1118,25.4507 5.5598,25.0037 6.1118,25.0037 L10.7788,25.0037 L10.7788,27.0037 L7.1118,27.0037 L7.1118,28.8937 L10.7788,28.8937 L10.7788,30.8937 L2.9998,30.8937 C2.4468,30.8937 1.9998,30.4467 1.9998,29.8937 L1.9998,13.9607 C1.9998,13.4087 2.4468,12.9607 2.9998,12.9607 C3.8278,12.9607 4.5008,12.2927 4.5008,11.4717 C4.5008,10.6507 3.8278,9.9827 2.9998,9.9827 C2.4468,9.9827 1.9998,9.5347 1.9998,8.9827 L1.9998,4.9997 C1.9998,4.4477 2.4468,3.9997 2.9998,3.9997 L45.0078,3.9997 C45.5608,3.9997 46.0078,4.4477 46.0078,4.9997 L46.0078,8.9827 C46.0078,9.5347 45.5608,9.9827 45.0078,9.9827 C44.1808,9.9827 43.5078,10.6507 43.5078,11.4717 L43.5078,11.4717 Z M24.1958,33.0557 L22.1168,33.0557 L22.1168,29.1187 L24.2448,29.1187 C25.5418,29.1187 26.1908,29.7757 26.1908,31.0877 C26.1908,32.4007 25.5258,33.0557 24.1958,33.0557 L24.1958,33.0557 Z M27.7228,33.0217 C28.1158,32.4627 28.3128,31.7947 28.3128,31.0197 C28.3128,29.9477 27.9618,29.0937 27.2598,28.4607 C26.5588,27.8267 25.6258,27.5107 24.4618,27.5107 L20.0288,27.5107 L20.0288,39.3707 L22.1168,39.3707 L22.1168,34.6647 L24.2048,34.6647 L26.9778,39.3707 L29.0658,39.3707 L26.0018,34.3057 C26.7548,34.0087 27.3288,33.5807 27.7228,33.0217 L27.7228,33.0217 Z M10.2238,21.1147 L11.5578,21.1147 L11.5578,23.1147 L9.2238,23.1147 C8.6708,23.1147 8.2238,22.6667 8.2238,22.1147 L8.2238,8.8897 C8.2238,8.3367 8.6708,7.8897 9.2238,7.8897 L13.8918,7.8897 C14.4448,7.8897 14.8918,8.3367 14.8918,8.8897 L14.8918,15.1127 L12.8918,15.1127 L12.8918,9.8897 L10.2238,9.8897 L10.2238,21.1147 Z M37.7848,21.1147 L37.7848,9.8897 L35.1168,9.8897 L35.1168,15.1127 L33.1168,15.1127 L33.1168,8.8897 C33.1168,8.3367 33.5648,7.8897 34.1168,7.8897 L38.7848,7.8897 C39.3378,7.8897 39.7848,8.3367 39.7848,8.8897 L39.7848,22.1147 C39.7848,22.6667 39.3378,23.1147 38.7848,23.1147 L37.2288,23.1147 L37.2288,21.1147 L37.7848,21.1147 Z M30.0058,14.3347 L30.0058,9.8897 L26.5608,9.8897 L26.5608,13.5567 L24.5608,13.5567 L24.5608,8.8897 C24.5608,8.3367 25.0078,7.8897 25.5608,7.8897 L31.0058,7.8897 C31.5588,7.8897 32.0058,8.3367 32.0058,8.8897 L32.0058,14.3347 L30.0058,14.3347 Z M21.4478,13.5567 L21.4478,9.8897 L18.0028,9.8897 L18.0028,14.3347 L16.0028,14.3347 L16.0028,8.8897 C16.0028,8.3367 16.4498,7.8897 17.0028,7.8897 L22.4478,7.8897 C23.0008,7.8897 23.4478,8.3367 23.4478,8.8897 L23.4478,13.5567 L21.4478,13.5567 Z M31.7328,30.3597 C32.6258,30.0767 33.3328,29.7677 33.8958,29.4447 L33.8958,33.7187 C33.8958,34.0657 33.1588,34.8127 31.1308,35.4517 L31.7328,37.3607 C32.6258,37.0777 33.3328,36.7687 33.8958,36.4457 L33.8958,40.2597 C33.8958,41.1897 30.1408,42.8957 24.0058,42.8957 C17.8688,42.8957 14.1128,41.1897 14.1128,40.2597 L14.1128,36.4477 C14.6808,36.7727 15.3968,37.0847 16.3038,37.3687 L16.9018,35.4607 C14.8558,34.8207 14.1128,34.0687 14.1128,33.7187 L14.1128,29.4457 C14.6808,29.7717 15.3968,30.0837 16.3038,30.3677 L16.9018,28.4597 C14.8558,27.8197 14.1128,27.0677 14.1128,26.7177 L14.1128,22.4287 C16.3698,23.7387 20.2178,24.3587 23.8948,24.3587 C27.7568,24.3587 31.6388,23.6777 33.8958,22.3657 L33.8958,26.7177 C33.8958,27.0647 33.1588,27.8117 31.1308,28.4507 L31.7328,30.3597 Z M23.8948,17.0127 C30.0818,17.0127 33.8688,18.7427 33.8688,19.6857 C33.8688,20.6277 30.0818,22.3587 23.8948,22.3587 C17.5758,22.3587 14.1298,20.5927 14.1298,19.6857 C14.1298,18.7787 17.5758,17.0127 23.8948,17.0127 L23.8948,17.0127 Z M35.8818,19.6857 C35.8818,16.6177 29.8448,15.0127 23.8948,15.0127 C18.2288,15.0127 12.1218,16.4747 12.1218,19.6857 L12.1218,19.7907 L12.1128,40.2597 C12.1128,43.3027 18.0958,44.8957 24.0058,44.8957 C29.9138,44.8957 35.8958,43.3027 35.8958,40.2597 L35.8818,19.7907 L35.8818,19.6857 Z" id="Amazon-DATABASE_Amazon-ElastiCache_Elasticache-for-Redis_Resource-Icon_light-bg" fill="#2E27AD"></path>);
    }
  }, [resource]);

  // 컴포넌트 반환
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="elasticache" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">{icon}</g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.id}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>ReplicationGroup</Description>
          </Col>
          <Col span={6}>
            <Description label='Engine'>{resource.engine}</Description>
          </Col>
          <Col span={6}>
            <Description label='Multi AZ'>{resource.multiAZ}</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
          <Col span={24}>
            {resource.shards !== null ? (
              <Description label='Shard'>
                {resource.shards.map((shard: any): JSX.Element => (
                  <div key={shard.id}>{shard.nodes !== null ? `[${shard.nodes.join(', ')}]` : ''}</div>
                ))}
              </Description>
            ) : (<></>)}
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] Elastic Beanstalk */
const ElasticBeanstalk: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="elasticbeanstalk" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M30.3558008,22.791794 C25.7258008,27.520794 18.2428008,28.219794 14.1828008,28.215811 C17.9428008,25.339794 21.7928008,21.918794 25.4478008,18.188794 C29.2668008,14.289794 32.7538008,10.168794 35.6678008,6.13679399 C35.6828008,10.294794 35.0198008,18.029794 30.3558008,22.791794 M18.3428008,8.50579399 C18.4578008,8.41079399 18.5768008,8.32379399 18.6928008,8.23179399 C18.9348008,8.04179399 19.1798008,7.85679399 19.4318008,7.68379399 C19.5708008,7.58779399 19.7108008,7.49579399 19.8528008,7.40479399 C20.0968008,7.24779399 20.3438008,7.09879399 20.5948008,6.95579399 C20.7388008,6.87379399 20.8798008,6.79179399 21.0258008,6.71479399 C21.3018008,6.56679399 21.5828008,6.43079399 21.8658008,6.29879399 C21.9858008,6.24179399 22.1038008,6.18179399 22.2238008,6.12779399 C22.6228008,5.95179399 23.0238008,5.78879399 23.4278008,5.64079399 C23.5358008,5.60079399 23.6428008,5.56779399 23.7498008,5.53079399 C24.0548008,5.42379399 24.3618008,5.32079399 24.6688008,5.22879399 C24.8318008,5.17979399 24.9948008,5.13479399 25.1578008,5.08979399 C25.4108008,5.01879399 25.6638008,4.95079399 25.9158008,4.88879399 C26.0878008,4.84679399 26.2588008,4.80579399 26.4308008,4.76679399 C26.6778008,4.71179399 26.9228008,4.66079399 27.1678008,4.61179399 C27.3328008,4.57979399 27.4988008,4.54579399 27.6628008,4.51779399 C27.9308008,4.46879399 28.1958008,4.42779399 28.4598008,4.38879399 C28.5898008,4.36879399 28.7238008,4.34579399 28.8528008,4.32779399 C29.2258008,4.27579399 29.5908008,4.23279399 29.9498008,4.19679399 C30.1088008,4.18079399 30.2608008,4.16879399 30.4178008,4.15479399 C30.6288008,4.13679399 30.8398008,4.11779399 31.0448008,4.10379399 C31.2118008,4.09179399 31.3748008,4.08279399 31.5358008,4.07379399 C31.7198008,4.06279399 31.9018008,4.05479399 32.0788008,4.04779399 C32.2348008,4.04079399 32.3898008,4.03479399 32.5408008,4.03079399 C32.7118008,4.02579399 32.8778008,4.02279399 33.0418008,4.02079399 C33.1778008,4.02079399 33.3178008,4.01779399 33.4468008,4.01779399 C33.6968008,4.01679399 33.9358008,4.01879399 34.1598008,4.02279399 C34.2678008,4.02479399 34.3648008,4.02779399 34.4658008,4.03079399 C34.5518008,4.03379399 34.6338008,4.03579399 34.7148008,4.03879399 C31.7338008,8.28179399 28.0638008,12.659794 24.0178008,16.788794 C20.1278008,20.760794 16.0148008,24.379794 12.0418008,27.332794 C12.0398008,27.265794 12.0378008,27.191794 12.0348008,27.120794 C12.0298008,26.969794 12.0248008,26.816794 12.0218008,26.648794 C12.0198008,26.528794 12.0198008,26.394794 12.0188008,26.266794 C12.0178008,26.103794 12.0158008,25.942794 12.0158008,25.768794 C12.0168008,25.605794 12.0218008,25.429794 12.0258008,25.258794 C12.0288008,25.091794 12.0298008,24.931794 12.0358008,24.756794 C12.0458008,24.423794 12.0618008,24.076794 12.0838008,23.717794 C12.0908008,23.585794 12.1038008,23.444794 12.1138008,23.309794 C12.1308008,23.060794 12.1488008,22.812794 12.1718008,22.554794 C12.1868008,22.392794 12.2078008,22.223794 12.2248008,22.057794 C12.2518008,21.815794 12.2768008,21.574794 12.3078008,21.326794 C12.3308008,21.149794 12.3598008,20.967794 12.3848008,20.787794 C12.4208008,20.542794 12.4578008,20.297794 12.4998008,20.049794 C12.5308008,19.861794 12.5678008,19.673794 12.6028008,19.483794 C12.6498008,19.236794 12.6988008,18.988794 12.7518008,18.738794 C12.7938008,18.545794 12.8398008,18.351794 12.8858008,18.156794 C12.9458008,17.907794 13.0078008,17.658794 13.0758008,17.408794 C13.1278008,17.213794 13.1838008,17.017794 13.2428008,16.821794 C13.3158008,16.571794 13.3948008,16.321794 13.4778008,16.072794 C13.5428008,15.878794 13.6088008,15.685794 13.6778008,15.491794 C13.7688008,15.241794 13.8678008,14.993794 13.9678008,14.745794 C14.0438008,14.557794 14.1208008,14.367794 14.2028008,14.181794 C14.3128008,13.932794 14.4328008,13.686794 14.5538008,13.440794 C14.6418008,13.262794 14.7278008,13.081794 14.8228008,12.904794 C14.9588008,12.652794 15.1058008,12.406794 15.2538008,12.160794 C15.3508008,12.000794 15.4428008,11.837794 15.5448008,11.679794 C15.7188008,11.412794 15.9098008,11.155794 16.0998008,10.898794 C16.1948008,10.772794 16.2808008,10.640794 16.3788008,10.516794 C16.6768008,10.142794 16.9918008,9.77879399 17.3308008,9.43379399 C17.6538008,9.10379399 17.9938008,8.79779399 18.3428008,8.50579399 M37.5268008,3.04079399 C37.5258008,3.03279399 37.5218008,3.02579399 37.5208008,3.01879399 C37.5068008,2.92379399 37.4838008,2.82979399 37.4428008,2.74079399 C37.4408008,2.73679399 37.4378008,2.73279399 37.4358008,2.72979399 C37.4268008,2.71079399 37.4148008,2.69679399 37.4048008,2.67979399 C37.3658008,2.60679399 37.3188008,2.54179399 37.2648008,2.48279399 C37.2438008,2.45979399 37.2208008,2.43979399 37.1978008,2.41979399 C37.1438008,2.37179399 37.0868008,2.33079399 37.0248008,2.29479399 C36.9988008,2.27979399 36.9728008,2.26479399 36.9458008,2.25179399 C36.8538008,2.20979399 36.7568008,2.17779399 36.6548008,2.16479399 C36.1088008,2.09579399 23.1688008,0.61579399 15.9018008,8.03379399 C10.1068008,13.948794 9.86380075,23.538794 10.0348008,27.451794 L10.0078008,27.451794 L10.0078008,45.989794 L12.0078008,45.989794 L12.0078008,30.146794 C12.6038008,30.187794 13.3858008,30.226794 14.3398008,30.226794 C18.8428008,30.226794 26.6898008,29.393794 31.7848008,24.190794 C39.0428008,16.782794 37.5918008,3.59879399 37.5268008,3.04079399" id="Amazon-Elastic-Beanstalk-Application_Resource-Icon_light-bg" fill="#D45B07"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>Application</Description>
          </Col>
          <Col span={20}>
            <Description label='Arn'>{resource.arn}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] ELB */
const ELB: React.FC<any> = ({ resource }): JSX.Element => {
  // Icon (유형에 따라)
  const icon: JSX.Element = useMemo(() => {
    switch (resource.type) {
      case 'application':
        return (<path d="M33.69,34.375 L36.035,34.375 L36.035,32 L33.69,32 L33.69,34.375 Z M26.751,34.375 L29.126,34.375 L29.126,32 L26.751,32 L26.751,34.375 Z M18.876,34.375 L21.251,34.375 L21.251,32 L18.876,32 L18.876,34.375 Z M11.966,34.375 L14.251,34.375 L14.251,32 L11.966,32 L11.966,34.375 Z M18.001,16.875 L30.001,16.875 L30.001,11 L18.001,11 L18.001,16.875 Z M37.035,30 L35.501,30 L35.501,26.625 C35.501,26.072 35.053,25.625 34.501,25.625 L32.001,25.625 L32.001,22.25 C32.001,21.697 31.553,21.25 31.001,21.25 L25.001,21.25 L25.001,18.875 L31.001,18.875 C31.553,18.875 32.001,18.428 32.001,17.875 L32.001,10 C32.001,9.447 31.553,9 31.001,9 L17.001,9 C16.448,9 16.001,9.447 16.001,10 L16.001,17.875 C16.001,18.428 16.448,18.875 17.001,18.875 L23.001,18.875 L23.001,21.25 L17.001,21.25 C16.448,21.25 16.001,21.697 16.001,22.25 L16.001,25.625 L13.501,25.625 C12.948,25.625 12.501,26.072 12.501,26.625 L12.501,30 L10.965,30 C10.413,30 9.965,30.447 9.965,31 L9.965,35.375 C9.965,35.928 10.413,36.375 10.965,36.375 L15.251,36.375 C15.803,36.375 16.251,35.928 16.251,35.375 L16.251,31 C16.251,30.447 15.803,30 15.251,30 L14.501,30 L14.501,27.625 L18.626,27.625 L18.626,30 L17.876,30 C17.323,30 16.876,30.447 16.876,31 L16.876,35.375 C16.876,35.928 17.323,36.375 17.876,36.375 L22.251,36.375 C22.803,36.375 23.251,35.928 23.251,35.375 L23.251,31 C23.251,30.447 22.803,30 22.251,30 L20.626,30 L20.626,26.625 C20.626,26.072 20.178,25.625 19.626,25.625 L18.001,25.625 L18.001,23.25 L30.001,23.25 L30.001,25.625 L28.376,25.625 C27.823,25.625 27.376,26.072 27.376,26.625 L27.376,30 L25.751,30 C25.198,30 24.751,30.447 24.751,31 L24.751,35.375 C24.751,35.928 25.198,36.375 25.751,36.375 L30.126,36.375 C30.678,36.375 31.126,35.928 31.126,35.375 L31.126,31 C31.126,30.447 30.678,30 30.126,30 L29.376,30 L29.376,27.625 L33.501,27.625 L33.501,30 L32.69,30 C32.137,30 31.69,30.447 31.69,31 L31.69,35.375 C31.69,35.928 32.137,36.375 32.69,36.375 L37.035,36.375 C37.587,36.375 38.035,35.928 38.035,35.375 L38.035,31 C38.035,30.447 37.587,30 37.035,30 L37.035,30 Z M24.001,44 C12.972,44 4,35.028 4,24 C4,12.972 12.972,4 24.001,4 C35.029,4 44.001,12.972 44.001,24 C44.001,35.028 35.029,44 24.001,44 L24.001,44 Z M24.001,2 C11.869,2 2,11.869 2,24 C2,36.131 11.869,46 24.001,46 C36.131,46 46.001,36.131 46.001,24 C46.001,11.869 36.131,2 24.001,2 L24.001,2 Z" id="AWS-Elastic-Load-Balancing_-Application-Load-Balancer_Resource-Icon_light-bg" fill="#4D27AA"></path>);
      case 'gateway':
        return (<path d="M17.955,29.333 L19.369,30.747 L16.796,33.32 C16.608,33.507 16.354,33.613 16.089,33.613 C15.823,33.613 15.569,33.507 15.382,33.32 L12.809,30.747 L14.224,29.333 L15,30.109 L15,17.72 L14.14,18.58 L12.726,17.166 L15.299,14.593 C15.486,14.406 15.74,14.3 16.006,14.3 C16.271,14.3 16.525,14.406 16.713,14.593 L19.285,17.166 L17.871,18.58 L17,17.708 L17,30.288 L17.955,29.333 Z M13.87,24.705 L11.297,27.278 L9.883,25.864 L10.747,25 L5.36,25 L5.36,23 L10.75,23 L9.883,22.133 L11.297,20.719 L13.87,23.291 C14.058,23.479 14.163,23.733 14.163,23.998 C14.163,24.263 14.058,24.518 13.87,24.705 L13.87,24.705 Z M21.922,25.864 L20.508,27.278 L17.934,24.705 C17.747,24.518 17.642,24.263 17.642,23.998 C17.642,23.733 17.747,23.479 17.934,23.291 L20.508,20.719 L21.922,22.133 L21.055,23 L26.36,23 L26.36,25 L21.058,25 L21.922,25.864 Z M24,44 C12.972,44 4,35.028 4,24 C4,12.972 12.972,4 24,4 C35.028,4 44,12.972 44,24 C44,35.028 35.028,44 24,44 L24,44 Z M24,2 C11.869,2 2,11.869 2,24 C2,36.131 11.869,46 24,46 C36.131,46 46,36.131 46,24 C46,11.869 36.131,2 24,2 L24,2 Z M35,34.36 L37,34.36 L37,32.36 L35,32.36 L35,34.36 Z M38,30.36 L34,30.36 C33.447,30.36 33,30.808 33,31.36 L33,32.36 L23,32.36 L23,29.36 L21,29.36 L21,33.36 C21,33.912 21.447,34.36 22,34.36 L33,34.36 L33,35.36 C33,35.912 33.447,36.36 34,36.36 L38,36.36 C38.553,36.36 39,35.912 39,35.36 L39,31.36 C39,30.808 38.553,30.36 38,30.36 L38,30.36 Z M35,25 L37,25 L37,23 L35,23 L35,25 Z M38,21 L34,21 C33.447,21 33,21.447 33,22 L33,23 L29,23 L29,25 L33,25 L33,26 C33,26.552 33.447,27 34,27 L38,27 C38.553,27 39,26.552 39,26 L39,22 C39,21.447 38.553,21 38,21 L38,21 Z M35,15.36 L37,15.36 L37,13.36 L35,13.36 L35,15.36 Z M38,11.36 L34,11.36 C33.447,11.36 33,11.808 33,12.36 L33,13.36 L22,13.36 C21.447,13.36 21,13.808 21,14.36 L21,18.36 L23,18.36 L23,15.36 L33,15.36 L33,16.36 C33,16.912 33.447,17.36 34,17.36 L38,17.36 C38.553,17.36 39,16.912 39,16.36 L39,12.36 C39,11.808 38.553,11.36 38,11.36 L38,11.36 Z" id="AWS-Application-Gateway_Resource-Icon_light-bg" fill="#4D27AA"></path>);
      case 'network':
        return (<path d="M24.0015,44.0029 C12.9725,44.0029 3.9995,35.0299 3.9995,24.0009 C3.9995,12.9729 12.9725,3.9999 24.0015,3.9999 C35.0295,3.9999 44.0025,12.9729 44.0025,24.0009 C44.0025,35.0299 35.0295,44.0029 24.0015,44.0029 L24.0015,44.0029 Z M24.0015,1.9999 C11.8695,1.9999 1.9995,11.8689 1.9995,24.0009 C1.9995,36.1329 11.8695,46.0029 24.0015,46.0029 C36.1335,46.0029 46.0025,36.1329 46.0025,24.0009 C46.0025,11.8689 36.1335,1.9999 24.0015,1.9999 L24.0015,1.9999 Z M29.0835,23.2939 C29.4745,23.6849 29.4745,24.3169 29.0835,24.7079 L26.1405,27.6539 L24.7265,26.2399 L25.9645,25.0009 L18.7505,25.0009 L18.7505,23.0009 L25.9645,23.0009 L24.7265,21.7619 L26.1405,20.3479 L29.0835,23.2939 Z M32.0015,35.2519 L35.2515,35.2519 L35.2515,32.0019 L32.0015,32.0019 L32.0015,35.2519 Z M36.2515,30.0019 L31.0015,30.0019 C30.4485,30.0019 30.0015,30.4489 30.0015,31.0019 L30.0015,36.2519 C30.0015,36.8049 30.4485,37.2519 31.0015,37.2519 L36.2515,37.2519 C36.8045,37.2519 37.2515,36.8049 37.2515,36.2519 L37.2515,31.0019 C37.2515,30.4489 36.8045,30.0019 36.2515,30.0019 L36.2515,30.0019 Z M17.6665,18.7409 L24.9615,14.8909 L23.3945,14.4659 L23.9175,12.5359 L27.9365,13.6249 C28.4695,13.7699 28.7835,14.3179 28.6395,14.8519 L27.5505,18.8729 L25.6205,18.3499 L26.1085,16.5469 L18.6005,20.5109 L17.6665,18.7409 Z M32.0015,16.0009 L35.2515,16.0009 L35.2515,12.7509 L32.0015,12.7509 L32.0015,16.0009 Z M36.2515,10.7509 L31.0015,10.7509 C30.4485,10.7509 30.0015,11.1979 30.0015,11.7509 L30.0015,17.0009 C30.0015,17.5539 30.4485,18.0009 31.0015,18.0009 L36.2515,18.0009 C36.8045,18.0009 37.2515,17.5539 37.2515,17.0009 L37.2515,11.7509 C37.2515,11.1979 36.8045,10.7509 36.2515,10.7509 L36.2515,10.7509 Z M8.3455,27.3469 L15.0355,27.3469 L15.0355,20.6569 L8.3455,20.6569 L8.3455,27.3469 Z M16.0355,18.6559 L7.3455,18.6559 C6.7925,18.6559 6.3455,19.1039 6.3455,19.6559 L6.3455,28.3469 C6.3455,28.8989 6.7925,29.3469 7.3455,29.3469 L16.0355,29.3469 C16.5885,29.3469 17.0355,28.8989 17.0355,28.3469 L17.0355,19.6559 C17.0355,19.1039 16.5885,18.6559 16.0355,18.6559 L16.0355,18.6559 Z M28.6395,33.1499 C28.7835,33.6839 28.4695,34.2319 27.9365,34.3769 L23.9175,35.4669 L23.3945,33.5369 L24.9625,33.1119 L17.6665,29.2619 L18.6005,27.4919 L26.1085,31.4549 L25.6205,29.6519 L27.5505,29.1289 L28.6395,33.1499 Z M32.0015,25.6259 L35.2515,25.6259 L35.2515,22.3759 L32.0015,22.3759 L32.0015,25.6259 Z M36.2515,20.3759 L31.0015,20.3759 C30.4485,20.3759 30.0015,20.8229 30.0015,21.3759 L30.0015,26.6259 C30.0015,27.1789 30.4485,27.6259 31.0015,27.6259 L36.2515,27.6259 C36.8045,27.6259 37.2515,27.1789 37.2515,26.6259 L37.2515,21.3759 C37.2515,20.8229 36.8045,20.3759 36.2515,20.3759 L36.2515,20.3759 Z" id="AWS-Elastic-Load-Balancing_Network-Load-Balancer_Resource-Icon_light-bg" fill="#4D27AA"></path>);
      default:
        return (<path d="M24.0015,44.002 C12.9725,44.002 3.9995,35.029 3.9995,24.001 C3.9995,12.973 12.9725,4 24.0015,4 C35.0295,4 44.0025,12.973 44.0025,24.001 C44.0025,35.029 35.0295,44.002 24.0015,44.002 L24.0015,44.002 Z M24.0015,2 C11.8695,2 1.9995,11.869 1.9995,24.001 C1.9995,36.133 11.8695,46.002 24.0015,46.002 C36.1335,46.002 46.0025,36.133 46.0025,24.001 C46.0025,11.869 36.1335,2 24.0015,2 L24.0015,2 Z M27.0645,27.235 C27.4605,27.235 27.7835,27.551 27.7835,27.939 C27.7835,28.326 27.4605,28.642 27.0645,28.642 C26.6675,28.642 26.3445,28.326 26.3445,27.939 C26.3445,27.551 26.6675,27.235 27.0645,27.235 L27.0645,27.235 Z M20.0635,25.142 C19.6665,25.142 19.3435,24.826 19.3435,24.439 C19.3435,24.051 19.6665,23.735 20.0635,23.735 C20.4605,23.735 20.7835,24.051 20.7835,24.439 C20.7835,24.826 20.4605,25.142 20.0635,25.142 L20.0635,25.142 Z M27.0645,20.275 C27.4295,20.275 27.7265,20.573 27.7265,20.939 C27.7265,21.304 27.4295,21.601 27.0645,21.601 C26.6985,21.601 26.4005,21.304 26.4005,20.939 C26.4005,20.573 26.6985,20.275 27.0645,20.275 L27.0645,20.275 Z M22.7615,24.216 L25.3195,22.934 C25.7885,23.344 26.3945,23.601 27.0645,23.601 C28.5315,23.601 29.7265,22.406 29.7265,20.939 C29.7265,19.47 28.5315,18.275 27.0645,18.275 C25.5955,18.275 24.4005,19.47 24.4005,20.939 C24.4005,21.009 24.4165,21.076 24.4225,21.146 L21.8635,22.428 C21.3825,22.002 20.7565,21.735 20.0635,21.735 C18.5635,21.735 17.3435,22.948 17.3435,24.439 C17.3435,25.929 18.5635,27.142 20.0635,27.142 C20.8445,27.142 21.5445,26.809 22.0405,26.283 L24.3805,27.583 C24.3645,27.7 24.3445,27.816 24.3445,27.939 C24.3445,29.429 25.5635,30.642 27.0645,30.642 C28.5635,30.642 29.7835,29.429 29.7835,27.939 C29.7835,26.448 28.5635,25.235 27.0645,25.235 C26.4195,25.235 25.8335,25.469 25.3665,25.843 L22.7805,24.407 C22.7795,24.342 22.7675,24.28 22.7615,24.216 L22.7615,24.216 Z M24.4385,31.751 C20.4065,31.751 17.1255,28.508 17.1255,24.521 C17.1255,20.533 20.4065,17.289 24.4385,17.289 C28.4715,17.289 31.7515,20.533 31.7515,24.521 C31.7515,28.508 28.4715,31.751 24.4385,31.751 L24.4385,31.751 Z M24.4385,15.289 C19.3035,15.289 15.1255,19.431 15.1255,24.521 C15.1255,29.61 19.3035,33.751 24.4385,33.751 C29.5735,33.751 33.7515,29.61 33.7515,24.521 C33.7515,19.431 29.5735,15.289 24.4385,15.289 L24.4385,15.289 Z M14.5005,37.002 L14.5005,10.128 L29.1265,10.125 L29.1265,14.375 C29.1265,14.928 29.5735,15.375 30.1265,15.375 L34.3765,15.375 L34.3765,37.002 L14.5005,37.002 Z M31.1265,11.539 L32.9625,13.375 L31.1265,13.375 L31.1265,11.539 Z M36.0835,13.668 L30.8335,8.418 C30.6425,8.227 30.3875,8.134 30.1265,8.134 L30.1265,8.125 L13.5005,8.128 C12.9475,8.128 12.5005,8.576 12.5005,9.128 L12.5005,38.002 C12.5005,38.555 12.9475,39.002 13.5005,39.002 L35.3765,39.002 C35.9295,39.002 36.3765,38.555 36.3765,38.002 L36.3765,14.375 L36.3675,14.375 C36.3675,14.115 36.2745,13.859 36.0835,13.668 L36.0835,13.668 Z" id="AWS-Elastic-Load-Balancing_Classic-Load-Balancer_Resource-Icon_light-bg" fill="#4D27AA"></path>);
    }
  }, [resource]);

  // 컴포넌트 반환
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="elb" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">{icon}</g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
            <Col span={4}>
              <Description label='Category'>LoadBalancer</Description>
            </Col>
            <Col span={4}>
              <Description label='Type'>{resource.type}</Description>
            </Col>
            <Col span={16}>
              <Description label='Arn'>{resource.arn}</Description>
            </Col>
          </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] Event Bridge */
const EventBridge: React.FC<any> = ({ resource }): JSX.Element => {
  console.log(resource)
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="eventbrideg" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M20.7122,24.916 L20.7122,22.916 L42.4202,22.916 L38.1932,18.689 L39.6072,17.275 L45.5412,23.209 C45.9312,23.6 45.9312,24.232 45.5412,24.623 L45.5412,24.623 L39.6072,30.557 L38.1932,29.143 L42.4202,24.916 L20.7122,24.916 Z M29.6672,6.839 L27.8272,6.054 L25.3722,11.81 L27.2122,12.595 L29.6672,6.839 Z M37.2232,13.274 L36.0222,11.675 L30.9872,15.456 L32.1882,17.056 L37.2232,13.274 Z M28.2832,34.812 L32.0952,39.774 L33.6802,38.556 L29.8692,33.593 L28.2832,34.812 Z M21.8692,36.844 L22.6522,43.032 L24.6372,42.78 L23.8532,36.592 L21.8692,36.844 Z M12.8402,41.193 L14.6792,41.978 L17.1352,36.223 L15.2952,35.437 L12.8402,41.193 Z M5.2832,34.758 L6.4842,36.357 L11.5192,32.576 L10.3182,30.977 L5.2832,34.758 Z M8.2662,24.651 L2.0002,25.444 L2.2522,27.429 L8.5182,26.636 L8.2662,24.651 Z M9.6942,18.151 L3.8772,15.743 L3.1112,17.591 L8.9292,19.999 L9.6942,18.151 Z M14.2242,13.221 L10.4132,8.258 L8.8272,9.477 L12.6382,14.439 L14.2242,13.221 Z M20.6382,11.188 L19.8552,5 L17.8712,5.252 L18.6542,11.44 L20.6382,11.188 Z M28.8752,28.623 L26.5872,32.586 C26.4082,32.895 26.0782,33.086 25.7212,33.086 L16.8772,33.086 C16.5192,33.086 16.1892,32.895 16.0112,32.586 L11.5892,24.927 C11.4102,24.617 11.4102,24.236 11.5892,23.927 L16.0112,16.268 C16.1892,15.958 16.5192,15.768 16.8772,15.768 L25.7212,15.768 C26.0782,15.768 26.4082,15.958 26.5872,16.268 L28.0962,18.884 L26.3642,19.884 L25.1432,17.768 L17.4542,17.768 L13.6092,24.427 L17.4542,31.086 L25.1432,31.086 L27.1422,27.623 L28.8752,28.623 Z" id="Amazon-EventBridge-Rule" fill="#B0084D"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={3}>
            <Description label='Category'>Rule</Description>
          </Col>
          <Col span={3}>
            <Description label='Event Bus'>{resource.eventBus}</Description>
          </Col>
          <Col span={18}>
            <Description label='Arn'>{resource.arn}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] Lambda */
const Lambda: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="lambda" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M24,44 C12.972,44 4,35.028 4,24 C4,12.972 12.972,4 24,4 C35.028,4 44,12.972 44,24 C44,35.028 35.028,44 24,44 L24,44 Z M24,2 C11.869,2 2,11.869 2,24 C2,36.131 11.869,46 24,46 C36.131,46 46,36.131 46,24 C46,11.869 36.131,2 24,2 L24,2 Z M17.231,35.25 L11.876,35.25 L18.221,21.959 L20.902,27.492 L17.231,35.25 Z M19.114,19.215 C18.946,18.87 18.597,18.651 18.214,18.651 L18.211,18.651 C17.826,18.652 17.477,18.874 17.312,19.221 L9.389,35.819 C9.24,36.129 9.262,36.493 9.445,36.783 C9.628,37.074 9.947,37.25 10.291,37.25 L17.864,37.25 C18.251,37.25 18.603,37.027 18.769,36.678 L22.915,27.915 C23.044,27.642 23.043,27.323 22.911,27.051 L19.114,19.215 Z M36.125,35.25 L30.673,35.25 L20.761,13.953 C20.597,13.601 20.243,13.375 19.854,13.375 L16.251,13.375 L16.255,9.25 L23.475,9.25 L33.339,30.545 C33.503,30.898 33.856,31.125 34.246,31.125 L36.125,31.125 L36.125,35.25 Z M37.125,29.125 L34.885,29.125 L25.021,7.83 C24.856,7.477 24.503,7.25 24.113,7.25 L15.256,7.25 C14.704,7.25 14.257,7.697 14.256,8.249 L14.25,14.374 C14.25,14.64 14.355,14.894 14.543,15.082 C14.73,15.27 14.984,15.375 15.25,15.375 L19.217,15.375 L29.129,36.672 C29.293,37.024 29.646,37.25 30.035,37.25 L37.125,37.25 C37.678,37.25 38.125,36.803 38.125,36.25 L38.125,30.125 C38.125,29.572 37.678,29.125 37.125,29.125 L37.125,29.125 Z" id="Amazon-Lambda-Lambda-Function_Resource-Icon_light-bg" fill="#D45B07"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Function</Description>
          </Col>
          <Col span={6}>
            <Description label='Runtime'>{resource.runtime}</Description>
          </Col>
          <Col span={6}>
            <Description label='Memory'>{resource.memory} MB</Description>
          </Col>
          <Col span={6}>
            <Description label='Timeout'>{resource.timeout} seconds</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] QLDB */
const QLDB: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="qldb" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M7.167,25.71 L10.71,25.71 L10.71,22.167 L7.167,22.167 L7.167,25.71 Z M10.936,20.167 L6.941,20.167 C5.963,20.167 5.167,20.963 5.167,21.941 L5.167,25.936 C5.167,26.914 5.963,27.71 6.941,27.71 L10.936,27.71 C11.914,27.71 12.71,26.914 12.71,25.936 L12.71,21.941 C12.71,20.963 11.914,20.167 10.936,20.167 L10.936,20.167 Z M37.258,25.71 L40.801,25.71 L40.801,22.167 L37.258,22.167 L37.258,25.71 Z M37.032,27.71 L41.026,27.71 C42.005,27.71 42.801,26.914 42.801,25.936 L42.801,21.941 C42.801,20.963 42.005,20.167 41.026,20.167 L37.032,20.167 C36.054,20.167 35.258,20.963 35.258,21.941 L35.258,25.936 C35.258,26.914 36.054,27.71 37.032,27.71 L37.032,27.71 Z M22.213,25.71 L25.756,25.71 L25.756,22.167 L22.213,22.167 L22.213,25.71 Z M25.981,20.167 L21.986,20.167 C21.009,20.167 20.213,20.963 20.213,21.941 L20.213,25.936 C20.213,26.914 21.009,27.71 21.986,27.71 L25.981,27.71 C26.96,27.71 27.756,26.914 27.756,25.936 L27.756,21.941 C27.756,20.963 26.96,20.167 25.981,20.167 L25.981,20.167 Z M43.968,28.877 L34.402,28.877 C34.327,28.873 34.19,28.824 34.09,28.772 L34.09,24.918 L28.923,24.918 L28.923,28.877 L19.357,28.877 C19.281,28.873 19.145,28.824 19.045,28.772 L19.045,24.918 L13.878,24.918 L13.878,28.772 C13.778,28.824 13.642,28.873 13.571,28.877 L4,28.877 L4,19 L13.637,18.999 C13.677,19.003 13.742,19.028 13.797,19.057 L13.797,22.959 L19.126,22.959 L19.126,19.056 C19.18,19.027 19.242,19.003 19.277,19 L28.923,19 L28.923,22.959 L34.172,22.959 L34.172,19.056 C34.224,19.027 34.288,19.003 34.322,19 L43.968,19 L43.968,28.877 Z M44.149,17 L34.322,17 C33.425,17 32.172,17.703 32.172,18.848 L32.172,20.959 L30.923,20.959 L30.923,18.848 C30.923,17.829 30.107,17 29.104,17 L19.277,17 C18.379,17 17.126,17.703 17.126,18.848 L17.126,20.959 L15.797,20.959 L15.797,18.848 C15.797,17.703 14.544,17 13.645,17 L3.819,17 C2.816,17 2,17.829 2,18.848 L2,29.029 C2,30.048 2.816,30.877 3.819,30.877 L13.571,30.877 C14.376,30.877 15.878,30.242 15.878,29.029 L15.878,26.918 L17.045,26.918 L17.045,29.029 C17.045,30.242 18.547,30.877 19.351,30.877 L29.104,30.877 C30.107,30.877 30.923,30.048 30.923,29.029 L30.923,26.918 L32.09,26.918 L32.09,29.029 C32.09,30.242 33.592,30.877 34.396,30.877 L44.149,30.877 C45.152,30.877 45.968,30.048 45.968,29.029 L45.968,18.848 C45.968,17.829 45.152,17 44.149,17 L44.149,17 Z" id="Amazon-Managed-Blockchain-Blockchain_Resource-Icon_light-bg" fill="#D45B07"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Ledger</Description>
          </Col>
          <Col span={6}>
            <Description label='Status'>{resource.status}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] RDS */
const RDS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="rds" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M21.2395,25.3828 C20.9905,25.3828 20.6895,25.3468 20.3375,25.2758 C19.9865,25.2028 19.6705,25.1138 19.3905,25.0088 L19.3905,26.1988 C19.6325,26.3358 19.9305,26.4448 20.2865,26.5288 C20.6415,26.6118 20.9975,26.6538 21.3525,26.6538 C22.1705,26.6538 22.8105,26.4438 23.2755,26.0238 C23.7415,25.6048 23.9735,25.0348 23.9735,24.3168 C23.9735,23.9458 23.9185,23.6298 23.8095,23.3688 C23.6995,23.1088 23.5295,22.8718 23.2995,22.6598 C23.0675,22.4478 22.7565,22.2368 22.3625,22.0248 L21.7505,21.6948 C21.4175,21.5148 21.1925,21.3478 21.0745,21.1958 C20.9585,21.0448 20.8985,20.8518 20.8985,20.6168 C20.8985,20.3378 20.9905,20.1178 21.1725,19.9598 C21.3525,19.8008 21.6025,19.7208 21.9205,19.7208 C22.3885,19.7208 22.9295,19.8338 23.5435,20.0618 L23.5435,18.8598 C22.9535,18.5868 22.3585,18.4498 21.7615,18.4498 C21.2855,18.4498 20.8635,18.5428 20.4965,18.7288 C20.1295,18.9138 19.8405,19.1788 19.6285,19.5228 C19.4175,19.8668 19.3105,20.2698 19.3105,20.7308 C19.3105,21.2308 19.4305,21.6538 19.6735,22.0018 C19.9155,22.3498 20.3165,22.6748 20.8775,22.9778 L21.4885,23.3068 C21.7995,23.4728 22.0205,23.6378 22.1525,23.7998 C22.2845,23.9628 22.3505,24.1608 22.3505,24.3958 C22.3505,24.7138 22.2575,24.9568 22.0675,25.1268 C21.8785,25.2978 21.6025,25.3828 21.2395,25.3828 L21.2395,25.3828 Z M16.7695,22.4328 C16.7695,21.5408 16.6505,20.8848 16.4115,20.4638 C16.1745,20.0448 15.8015,19.8338 15.2945,19.8338 L14.6355,19.8338 L14.6355,25.2698 L15.3045,25.2698 C15.7975,25.2698 16.1635,25.0558 16.4065,24.6288 C16.6475,24.1998 16.7695,23.5438 16.7695,22.6598 L16.7695,22.4328 Z M17.6425,19.6188 C18.1495,20.2848 18.4025,21.2598 18.4025,22.5458 C18.4025,23.8398 18.1535,24.8198 17.6545,25.4858 C17.1545,26.1508 16.4285,26.4838 15.4755,26.4838 L13.0485,26.4838 L13.0485,18.6208 L15.4195,18.6208 C16.3945,18.6208 17.1355,18.9538 17.6425,19.6188 L17.6425,19.6188 Z M10.2005,21.0938 C10.2005,20.6708 10.1225,20.3498 9.9685,20.1298 C9.8125,19.9098 9.5875,19.8008 9.2925,19.8008 L8.5545,19.8008 L8.5545,22.3878 L9.2925,22.3878 C9.5875,22.3878 9.8125,22.2788 9.9685,22.0588 C10.1225,21.8388 10.2005,21.5178 10.2005,21.0938 L10.2005,21.0938 Z M10.5865,23.3298 L12.1745,26.4838 L10.5415,26.4838 L9.1685,23.5678 L8.5545,23.5678 L8.5545,26.4838 L7.0015,26.4838 L7.0015,18.6208 L9.4855,18.6208 C10.1815,18.6208 10.7355,18.8418 11.1475,19.2848 C11.5595,19.7268 11.7655,20.3298 11.7655,21.0938 C11.7655,21.6228 11.6635,22.0808 11.4605,22.4668 C11.2555,22.8528 10.9645,23.1408 10.5865,23.3298 L10.5865,23.3298 Z M41.5935,15.1378 L41.5935,10.8828 C41.5935,10.3308 41.4775,9.9108 41.2475,9.6228 C41.0155,9.3358 40.6805,9.1928 40.2435,9.1928 C39.6905,9.1928 39.1125,9.4158 38.5075,9.8618 L38.3825,9.3398 L37.1115,9.3398 L37.1115,15.1378 L38.6655,15.1378 L38.6655,10.6448 C38.9455,10.4628 39.2025,10.3718 39.4365,10.3718 C39.6565,10.3718 39.8115,10.4478 39.9025,10.5988 C39.9935,10.7508 40.0385,10.9928 40.0385,11.3248 L40.0385,15.1378 L41.5935,15.1378 Z M34.4685,12.2448 C34.4685,11.6018 34.4055,11.1288 34.2805,10.8258 C34.1565,10.5238 33.9535,10.3718 33.6745,10.3718 C33.3945,10.3718 33.1915,10.5238 33.0665,10.8258 C32.9425,11.1288 32.8795,11.6018 32.8795,12.2448 C32.8795,12.8878 32.9425,13.3588 33.0665,13.6568 C33.1915,13.9558 33.3945,14.1058 33.6745,14.1058 C33.9535,14.1058 34.1565,13.9558 34.2805,13.6568 C34.4055,13.3588 34.4685,12.8878 34.4685,12.2448 L34.4685,12.2448 Z M35.4105,9.9868 C35.8185,10.5158 36.0225,11.2688 36.0225,12.2448 C36.0225,13.2128 35.8185,13.9608 35.4105,14.4898 C35.0025,15.0208 34.4235,15.2848 33.6745,15.2848 C32.9265,15.2848 32.3465,15.0208 31.9375,14.4898 C31.5295,13.9608 31.3255,13.2128 31.3255,12.2448 C31.3255,11.2688 31.5295,10.5158 31.9375,9.9868 C32.3465,9.4568 32.9265,9.1928 33.6745,9.1928 C34.4235,9.1928 35.0025,9.4568 35.4105,9.9868 L35.4105,9.9868 Z M26.5945,15.1378 L30.6225,15.1378 L30.6225,13.9458 L28.2285,13.9458 L30.5765,10.4408 L30.5765,9.3398 L26.6845,9.3398 L26.6845,10.5308 L28.9425,10.5308 L26.5945,14.0368 L26.5945,15.1378 Z M24.2335,13.8328 L24.2335,12.7208 C24.0675,12.6678 23.8715,12.6418 23.6435,12.6418 C23.4255,12.6418 23.2565,12.7118 23.1395,12.8518 C23.0215,12.9908 22.9635,13.1948 22.9635,13.4578 C22.9635,13.6858 23.0105,13.8648 23.1055,13.9968 C23.2005,14.1298 23.3265,14.1948 23.4855,14.1948 C23.7355,14.1948 23.9845,14.0738 24.2335,13.8328 L24.2335,13.8328 Z M23.7695,15.0988 C23.5265,15.2228 23.2815,15.2848 23.0315,15.2848 C22.5625,15.2848 22.1915,15.1328 21.9205,14.8248 C21.6475,14.5198 21.5105,14.0978 21.5105,13.5608 C21.5105,12.9928 21.6775,12.5448 22.0105,12.2158 C22.3435,11.8868 22.7935,11.7228 23.3605,11.7228 C23.5945,11.7228 23.8855,11.7688 24.2335,11.8588 L24.2335,11.3368 C24.2335,10.9438 24.1825,10.6768 24.0815,10.5368 C23.9785,10.3978 23.7885,10.3268 23.5085,10.3268 C23.0535,10.3268 22.4985,10.4478 21.8415,10.6898 L21.8415,9.6568 C22.0595,9.5138 22.3465,9.4008 22.7025,9.3178 C23.0575,9.2348 23.4215,9.1928 23.7915,9.1928 C24.4495,9.1928 24.9265,9.3418 25.2215,9.6408 C25.5165,9.9398 25.6645,10.4178 25.6645,11.0758 L25.6645,15.1378 L24.4615,15.1378 L24.3255,14.6158 C24.1965,14.8128 24.0105,14.9728 23.7695,15.0988 L23.7695,15.0988 Z M20.4105,15.1378 L20.4105,10.8828 C20.4105,10.3378 20.2975,9.9208 20.0705,9.6288 C19.8435,9.3378 19.5175,9.1928 19.0945,9.1928 C18.5655,9.1928 17.9905,9.4228 17.3705,9.8848 C17.1505,9.4228 16.7725,9.1928 16.2365,9.1928 C15.7065,9.1928 15.1385,9.4158 14.5345,9.8618 L14.4085,9.3398 L13.1375,9.3398 L13.1375,15.1378 L14.6925,15.1378 L14.6925,10.6448 C14.9715,10.4628 15.2185,10.3718 15.4295,10.3718 C15.6345,10.3718 15.7805,10.4478 15.8675,10.5988 C15.9545,10.7508 15.9975,10.9888 15.9975,11.3148 L15.9975,15.1378 L17.5515,15.1378 L17.5515,10.9048 L17.5515,10.7698 C17.5515,10.7238 17.5485,10.6828 17.5405,10.6448 C17.8205,10.4628 18.0705,10.3718 18.2895,10.3718 C18.4935,10.3718 18.6385,10.4478 18.7265,10.5988 C18.8125,10.7508 18.8565,10.9888 18.8565,11.3148 L18.8565,15.1378 L20.4105,15.1378 Z M10.0085,12.1318 L9.2925,8.8748 L8.6005,12.1318 L10.0085,12.1318 Z M12.4015,15.1378 L10.6545,15.1378 L10.2455,13.2658 L8.3625,13.2658 L7.9655,15.1378 L6.2975,15.1378 L8.4755,7.2758 L10.2345,7.2758 L12.4015,15.1378 Z M44.0025,30.0058 L44.0025,26.4708 C42.2715,27.4138 39.6485,27.9028 37.0365,27.9028 C34.4245,27.9028 31.8015,27.4138 30.0715,26.4708 L30.0715,30.0058 C30.0715,30.6348 32.4405,32.1098 37.0365,32.1098 C41.6325,32.1098 44.0025,30.6348 44.0025,30.0058 L44.0025,30.0058 Z M44.0025,36.1038 L44.0025,32.6778 C42.2715,33.6208 39.6485,34.1098 37.0365,34.1098 C34.4245,34.1098 31.8015,33.6208 30.0715,32.6778 L30.0715,36.1038 C30.0715,36.7328 32.4405,38.2068 37.0365,38.2068 C41.6325,38.2068 44.0025,36.7328 44.0025,36.1038 L44.0025,36.1038 Z M44.0025,41.5478 L44.0025,38.7758 C42.2715,39.7188 39.6485,40.2068 37.0365,40.2068 C34.4245,40.2068 31.8015,39.7188 30.0715,38.7758 L30.0715,41.5478 C30.0715,42.1768 32.4405,43.6518 37.0365,43.6518 C41.6325,43.6518 44.0025,42.1768 44.0025,41.5478 L44.0025,41.5478 Z M30.0715,23.7988 C30.0715,24.4278 32.4405,25.9028 37.0365,25.9028 C41.6325,25.9028 44.0025,24.4278 44.0025,23.7988 C44.0025,23.1698 41.6325,21.6948 37.0365,21.6948 C32.4405,21.6948 30.0715,23.1698 30.0715,23.7988 L30.0715,23.7988 Z M46.0025,23.7988 L46.0025,41.5478 C46.0025,44.2418 41.4915,45.6518 37.0365,45.6518 C32.5815,45.6518 28.0715,44.2418 28.0715,41.5478 L28.0715,23.7988 C28.0715,21.1048 32.5815,19.6958 37.0365,19.6958 C41.4915,19.6958 46.0025,21.1048 46.0025,23.7988 L46.0025,23.7988 Z M7.7545,43.8918 L27.4365,43.8918 L27.4365,45.8918 L7.7545,45.8918 C4.5815,45.8918 2.0005,43.3108 2.0005,40.1378 L2.0005,7.7548 C2.0005,4.5818 4.5815,1.9998 7.7545,1.9998 L40.1365,1.9998 C43.3095,1.9998 45.8915,4.5818 45.8915,7.7548 L45.8915,20.4548 L43.8915,20.4548 L43.8915,7.7548 C43.8915,5.6848 42.2075,3.9998 40.1365,3.9998 L7.7545,3.9998 C5.6835,3.9998 4.0005,5.6848 4.0005,7.7548 L4.0005,40.1378 C4.0005,42.2078 5.6835,43.8918 7.7545,43.8918 L7.7545,43.8918 Z" id="Amazon-DATABASEAmazon-Aurora-Amazon-RDS-instance_Res_48" fill="#2E27AD"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={5}>
            <Description label='Category'>DBInstance</Description>
          </Col>
          <Col span={5}>
            <Description label='Class'>{resource.class}</Description>
          </Col>
          <Col span={5}>
            <Description label='Engine'>{resource.engine}</Description>
          </Col>
          <Col span={5}>
            <Description label='Allocated Storage'>{resource.allocatedStorage} GB</Description>
          </Col>
          <Col span={4}>
            <Description label='Multi AZ'>{resource.multiAZ ? 'Active' : 'None'}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] S3 */
const S3: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="s3" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M40.5038,26.1601 L40.7278,24.4941 C42.5118,25.5811 43.0628,26.2091 43.2228,26.4741 C42.7498,26.6171 41.7948,26.4911 40.5038,26.1601 L40.5038,26.1601 Z M22.8018,20.1111 C22.8018,20.0581 22.8448,20.0151 22.8978,20.0151 C22.9128,20.0151 22.9238,20.0251 22.9368,20.0321 L22.8638,20.1791 C22.8308,20.1691 22.8018,20.1491 22.8018,20.1111 L22.8018,20.1111 Z M36.5138,40.7981 C36.5078,40.8431 36.5048,40.8871 36.5048,40.9311 C36.5048,41.0861 36.1258,41.6751 34.4408,42.3401 C33.6898,42.6371 32.8028,42.9031 31.8028,43.1331 C29.2278,43.7291 26.0638,44.0571 22.8958,44.0571 C14.4298,44.0571 9.2888,41.8871 9.2888,40.9311 C9.2888,40.8871 9.2858,40.8431 9.2798,40.7981 L5.4408,12.2851 C5.6878,12.4291 5.9528,12.5661 6.2308,12.7001 C6.3098,12.7381 6.3958,12.7741 6.4778,12.8121 C6.7178,12.9231 6.9668,13.0301 7.2268,13.1341 C7.3388,13.1781 7.4518,13.2221 7.5668,13.2651 C7.8428,13.3691 8.1278,13.4691 8.4228,13.5651 C8.5098,13.5941 8.5928,13.6241 8.6808,13.6511 C9.0598,13.7701 9.4528,13.8841 9.8578,13.9911 C9.9708,14.0211 10.0878,14.0501 10.2028,14.0781 C10.5148,14.1581 10.8328,14.2341 11.1578,14.3061 C11.2988,14.3381 11.4388,14.3691 11.5808,14.3981 C11.9458,14.4751 12.3188,14.5491 12.6978,14.6181 C12.7798,14.6331 12.8588,14.6491 12.9418,14.6641 C13.3998,14.7441 13.8688,14.8181 14.3448,14.8881 C14.4788,14.9071 14.6148,14.9241 14.7508,14.9421 C15.1108,14.9921 15.4758,15.0381 15.8438,15.0811 C15.9938,15.0981 16.1448,15.1161 16.2968,15.1331 C16.7408,15.1801 17.1888,15.2231 17.6398,15.2621 C17.6928,15.2661 17.7468,15.2721 17.8018,15.2761 C18.3058,15.3171 18.8128,15.3501 19.3208,15.3801 C19.4658,15.3881 19.6108,15.3941 19.7568,15.4011 C20.1408,15.4201 20.5248,15.4351 20.9088,15.4481 C21.0598,15.4531 21.2088,15.4581 21.3588,15.4621 C21.8718,15.4731 22.3848,15.4821 22.8958,15.4821 C23.4058,15.4821 23.9188,15.4731 24.4318,15.4621 C24.5818,15.4581 24.7328,15.4531 24.8828,15.4481 C25.2678,15.4351 25.6508,15.4201 26.0338,15.4011 C26.1808,15.3941 26.3258,15.3881 26.4718,15.3801 C26.9808,15.3501 27.4868,15.3171 27.9898,15.2761 C28.0458,15.2711 28.1008,15.2651 28.1558,15.2621 C28.6068,15.2231 29.0518,15.1801 29.4938,15.1331 C29.6478,15.1161 29.7988,15.0981 29.9508,15.0811 C30.3168,15.0381 30.6808,14.9921 31.0398,14.9431 C31.1768,14.9251 31.3148,14.9071 31.4498,14.8871 C31.9248,14.8181 32.3928,14.7441 32.8518,14.6641 C32.9348,14.6491 33.0158,14.6331 33.0988,14.6171 C33.4768,14.5491 33.8478,14.4751 34.2128,14.3981 C34.3558,14.3691 34.4948,14.3381 34.6358,14.3061 C34.9608,14.2331 35.2788,14.1571 35.5918,14.0781 C35.7058,14.0491 35.8228,14.0211 35.9358,13.9921 C36.3418,13.8841 36.7348,13.7701 37.1138,13.6511 C37.2008,13.6241 37.2828,13.5951 37.3678,13.5661 C37.6648,13.4701 37.9518,13.3691 38.2298,13.2641 C38.3428,13.2221 38.4548,13.1791 38.5658,13.1351 C38.8278,13.0301 39.0788,12.9221 39.3218,12.8101 C39.4008,12.7731 39.4848,12.7381 39.5628,12.7011 C39.8408,12.5671 40.1068,12.4291 40.3538,12.2851 L38.5618,25.5911 C34.9248,24.4241 29.8168,22.3071 24.9818,20.0081 C24.9268,18.9011 24.0178,18.0151 22.8978,18.0151 C21.7418,18.0151 20.8018,18.9561 20.8018,20.1111 C20.8018,21.2661 21.7418,22.2061 22.8978,22.2061 C23.3518,22.2061 23.7698,22.0571 24.1128,21.8101 C28.4448,23.8891 33.9758,26.3421 38.2928,27.5881 L36.5138,40.7981 Z M22.8958,4.0001 C33.3148,4.0001 40.6558,7.2281 40.7918,9.0211 L40.7658,9.2291 C40.7478,9.2911 40.7088,9.3541 40.6758,9.4181 C40.6488,9.4701 40.6288,9.5201 40.5918,9.5731 C40.5478,9.6351 40.4828,9.6981 40.4258,9.7611 C40.3748,9.8161 40.3318,9.8711 40.2708,9.9271 C40.2028,9.9881 40.1158,10.0511 40.0348,10.1131 C39.9598,10.1711 39.8938,10.2281 39.8078,10.2871 C39.7168,10.3471 39.6078,10.4091 39.5058,10.4711 C39.4068,10.5301 39.3158,10.5901 39.2048,10.6491 C39.0948,10.7091 38.9658,10.7671 38.8448,10.8271 C38.7208,10.8881 38.6048,10.9481 38.4688,11.0091 C38.3398,11.0661 38.1928,11.1231 38.0548,11.1801 C37.9048,11.2401 37.7638,11.3021 37.6038,11.3611 C37.4558,11.4171 37.2898,11.4711 37.1328,11.5251 C36.9618,11.5841 36.7978,11.6441 36.6158,11.7021 C36.4468,11.7561 36.2608,11.8061 36.0818,11.8591 C35.8918,11.9151 35.7088,11.9721 35.5088,12.0261 C35.3168,12.0781 35.1098,12.1261 34.9098,12.1761 C34.7028,12.2271 34.5028,12.2801 34.2858,12.3301 C34.0698,12.3791 33.8378,12.4241 33.6118,12.4711 C33.3938,12.5161 33.1818,12.5641 32.9538,12.6071 C32.7138,12.6531 32.4568,12.6941 32.2068,12.7371 C31.9768,12.7761 31.7538,12.8181 31.5148,12.8551 C31.2548,12.8951 30.9788,12.9311 30.7088,12.9681 C30.4648,13.0011 30.2268,13.0381 29.9748,13.0681 C29.6818,13.1041 29.3728,13.1341 29.0698,13.1651 C28.8258,13.1911 28.5898,13.2201 28.3398,13.2421 C28.0038,13.2731 27.6518,13.2961 27.3058,13.3201 C27.0728,13.3381 26.8478,13.3581 26.6098,13.3731 C26.2308,13.3951 25.8338,13.4091 25.4408,13.4261 C25.2248,13.4341 25.0148,13.4471 24.7938,13.4541 C24.1748,13.4721 23.5418,13.4821 22.8958,13.4821 C22.2498,13.4821 21.6168,13.4721 20.9968,13.4541 C20.7748,13.4471 20.5628,13.4331 20.3428,13.4251 C19.9528,13.4091 19.5598,13.3951 19.1818,13.3731 C18.9318,13.3571 18.6938,13.3361 18.4488,13.3181 C18.1158,13.2941 17.7758,13.2721 17.4528,13.2421 C17.2018,13.2201 16.9658,13.1901 16.7208,13.1651 C16.4178,13.1341 16.1088,13.1041 15.8168,13.0681 C15.5668,13.0381 15.3298,13.0021 15.0868,12.9681 C14.8168,12.9311 14.5388,12.8961 14.2778,12.8551 C14.0298,12.8171 13.7978,12.7731 13.5588,12.7321 C13.3178,12.6901 13.0708,12.6511 12.8398,12.6071 C12.6078,12.5631 12.3928,12.5151 12.1688,12.4691 C11.9468,12.4221 11.7188,12.3781 11.5058,12.3291 C11.2898,12.2801 11.0908,12.2271 10.8838,12.1761 C10.6838,12.1261 10.4758,12.0781 10.2848,12.0261 C10.0818,11.9721 9.8968,11.9141 9.7038,11.8571 C9.5278,11.8061 9.3448,11.7551 9.1778,11.7021 C8.9928,11.6431 8.8268,11.5831 8.6538,11.5221 C8.4988,11.4691 8.3358,11.4161 8.1908,11.3611 C8.0288,11.3021 7.8878,11.2391 7.7378,11.1791 C7.5998,11.1221 7.4528,11.0651 7.3248,11.0091 C7.1908,10.9481 7.0738,10.8881 6.9498,10.8271 C6.8288,10.7671 6.6988,10.7091 6.5888,10.6481 C6.4788,10.5891 6.3868,10.5291 6.2868,10.4691 C6.1858,10.4081 6.0768,10.3471 5.9868,10.2871 C5.8998,10.2271 5.8318,10.1691 5.7558,10.1101 C5.6768,10.0491 5.5908,9.9871 5.5248,9.9271 C5.4618,9.8701 5.4178,9.8131 5.3658,9.7581 C5.3098,9.6961 5.2468,9.6341 5.2028,9.5731 C5.1648,9.5191 5.1458,9.4671 5.1178,9.4131 C5.0858,9.3511 5.0468,9.2891 5.0298,9.2291 L5.0018,9.0201 C5.1408,7.2271 12.4798,4.0001 22.8958,4.0001 L22.8958,4.0001 Z M45.2548,26.2571 C45.0418,25.1071 43.7168,23.8891 41.0178,22.3471 L42.7338,9.5951 L42.7338,9.5911 L42.7338,9.5901 L42.7848,9.2001 C42.7908,9.1571 42.7938,9.1141 42.7938,9.0711 C42.7938,4.9041 32.3078,2.0001 22.8958,2.0001 C13.4848,2.0001 2.9998,4.9041 2.9998,9.0711 C2.9998,9.1151 3.0028,9.1591 3.0088,9.2031 L3.0608,9.5931 L3.0608,9.5951 L7.2898,41.0091 C7.4208,44.6851 16.9028,46.0571 22.8958,46.0571 C26.2108,46.0571 29.5338,45.7111 32.2528,45.0821 C33.3478,44.8301 34.3308,44.5331 35.1748,44.2001 C37.3408,43.3451 38.4598,42.2711 38.5038,41.0091 L40.2448,28.0801 C41.1968,28.2821 42.0618,28.4051 42.7808,28.4051 C43.7498,28.4051 44.4748,28.2001 44.8668,27.7321 C45.2168,27.3161 45.3548,26.7921 45.2548,26.2571 L45.2548,26.2571 Z" id="AWS-Amazon-Simple-Storage_Bucket_Resource-Icon_light-bg" fill="#3F8624"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Bucket</Description>
          </Col>
          <Col span={6}>
            <Description label='Location'>{resource.location}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] SES */
const SES: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="ses" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M10.3032,14.3134 C10.2782,14.4964 10.2652,14.7174 10.2652,14.9744 L10.2652,15.1304 C10.2652,15.1854 10.2722,15.2434 10.2842,15.3044 C10.0022,15.6104 9.6842,15.7644 9.3282,15.7644 C8.7162,15.7644 8.4102,15.1394 8.4102,13.8904 C8.4102,12.8374 8.5612,11.9674 8.8612,11.2814 C9.1602,10.5964 9.5312,10.2524 9.9722,10.2524 C10.2172,10.2524 10.4982,10.3634 10.8172,10.5844 L10.3032,14.3134 Z M5.2692,20.1734 C6.1752,20.7244 7.2652,21.0004 8.5382,21.0004 C9.5802,21.0004 10.5102,20.7914 11.3312,20.3754 L11.3312,18.7584 C10.4372,19.0884 9.5802,19.2544 8.7592,19.2544 C7.4122,19.2544 6.3742,18.8164 5.6462,17.9404 C4.9162,17.0664 4.5532,15.7944 4.5532,14.1294 C4.5532,12.7464 4.7912,11.4994 5.2692,10.3914 C5.7462,9.2824 6.4262,8.3974 7.3092,7.7364 C8.1902,7.0754 9.1822,6.7454 10.2842,6.7454 C11.7052,6.7454 12.7852,7.1464 13.5272,7.9474 C14.2672,8.7504 14.6382,9.9224 14.6382,11.4654 C14.6382,12.2124 14.5552,12.9114 14.3892,13.5604 C14.2252,14.2094 13.9912,14.7444 13.6922,15.1674 C13.3922,15.5894 13.0762,15.8014 12.7452,15.8014 C12.5742,15.8014 12.4402,15.7364 12.3422,15.6084 C12.2432,15.4804 12.1952,15.3044 12.1952,15.0844 C12.1952,14.8894 12.2062,14.7174 12.2322,14.5704 L13.0212,8.8574 L11.3132,8.8574 L11.0932,9.5004 C10.6392,8.8884 10.0822,8.5824 9.4202,8.5824 C8.8822,8.5824 8.3652,8.8174 7.8682,9.2894 C7.3722,9.7614 6.9652,10.4214 6.6472,11.2724 C6.3282,12.1254 6.1692,13.0634 6.1692,14.0924 C6.1692,15.1704 6.3652,15.9974 6.7572,16.5724 C7.1492,17.1484 7.7242,17.4364 8.4842,17.4364 C8.8392,17.4364 9.2092,17.3444 9.5962,17.1614 C9.9812,16.9774 10.3212,16.7264 10.6152,16.4074 C10.8102,16.7264 11.0742,16.9704 11.4052,17.1414 C11.7352,17.3134 12.1152,17.3994 12.5432,17.3994 C13.2662,17.3994 13.9302,17.1544 14.5372,16.6644 C15.1432,16.1744 15.6232,15.4774 15.9792,14.5704 C16.3342,13.6644 16.5122,12.6234 16.5122,11.4474 C16.5122,10.1124 16.2732,8.9644 15.7952,8.0034 C15.3172,7.0424 14.6162,6.3014 13.6922,5.7804 C12.7672,5.2594 11.6562,5.0004 10.3582,5.0004 C8.9252,5.0004 7.6112,5.3784 6.4172,6.1394 C5.2242,6.8974 4.2712,7.9724 3.5612,9.3624 C2.8502,10.7524 2.4952,12.3544 2.4952,14.1664 C2.4952,15.5874 2.7312,16.8054 3.2022,17.8214 C3.6742,18.8384 4.3632,19.6224 5.2692,20.1734 L5.2692,20.1734 Z M23.3542,31.9804 C23.5392,32.1344 23.7672,32.2114 23.9942,32.2114 C24.2222,32.2114 24.4492,32.1344 24.6352,31.9804 L27.6682,29.4534 L42.2252,41.5844 L5.7632,41.5844 L20.3222,29.4524 L23.3542,31.9804 Z M29.2312,28.1504 L43.9892,15.8524 L43.9892,40.4484 L29.2312,28.1504 Z M44.9892,12.7164 L18.5452,12.7164 L18.5452,14.7164 L42.2252,14.7164 L23.9942,29.9104 L13.3682,21.0494 L12.0872,22.5844 L18.7592,28.1494 L4.0002,40.4484 L4.0002,22.0704 L2.0002,22.0704 L2.0002,42.5844 C2.0002,43.1364 2.4482,43.5844 3.0002,43.5844 L44.9892,43.5844 C45.5412,43.5844 45.9892,43.1364 45.9892,42.5844 L45.9892,13.7164 C45.9892,13.1644 45.5412,12.7164 44.9892,12.7164 L44.9892,12.7164 Z" id="Amazon-Amazon-Simple-Email-Service-Email_Resource-Icon_light-bg" fill="#BF0816"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Identity</Description>
          </Col>
          <Col span={6}>
            <Description label='Type'>{resource.type}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] SNS */
const SNS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="sns" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M44,38.5 L46,38.5 L46,36.5 L44,36.5 L44,38.5 Z M46,33 L46,34.5 L44,34.5 L44,34 L43.5,34 L43.5,32 L45,32 C45.553,32 46,32.447 46,33 L46,33 Z M13.5,34 L16.5,34 L16.5,32 L13.5,32 L13.5,34 Z M37.5,34 L40.5,34 L40.5,32 L37.5,32 L37.5,34 Z M19.5,34 L22.5,34 L22.5,32 L19.5,32 L19.5,34 Z M7.5,34 L10.5,34 L10.5,32 L7.5,32 L7.5,34 Z M31.5,34 L34.5,34 L34.5,32 L31.5,32 L31.5,34 Z M25.5,34 L28.5,34 L28.5,32 L25.5,32 L25.5,34 Z M3,32 L4.5,32 L4.5,34 L4,34 L4,34.5 L2,34.5 L2,33 C2,32.447 2.447,32 3,32 L3,32 Z M2,38.5 L4,38.5 L4,36.5 L2,36.5 L2,38.5 Z M4,41 L4.5,41 L4.5,43 L3,43 C2.447,43 2,42.553 2,42 L2,40.5 L4,40.5 L4,41 Z M19.5,43 L22.5,43 L22.5,41 L19.5,41 L19.5,43 Z M31.5,43 L34.5,43 L34.5,41 L31.5,41 L31.5,43 Z M37.5,43 L40.5,43 L40.5,41 L37.5,41 L37.5,43 Z M7.5,43 L10.5,43 L10.5,41 L7.5,41 L7.5,43 Z M25.5,43 L28.5,43 L28.5,41 L25.5,41 L25.5,43 Z M13.5,43 L16.5,43 L16.5,41 L13.5,41 L13.5,43 Z M44,40.5 L46,40.5 L46,42 C46,42.553 45.553,43 45,43 L43.5,43 L43.5,41 L44,41 L44,40.5 Z M44,25.5 L46,25.5 L46,23.5 L44,23.5 L44,25.5 Z M46,20 L46,21.5 L44,21.5 L44,21 L43.5,21 L43.5,19 L45,19 C45.553,19 46,19.447 46,20 L46,20 Z M31.5,21 L34.5,21 L34.5,19 L31.5,19 L31.5,21 Z M7.5,21 L10.5,21 L10.5,19 L7.5,19 L7.5,21 Z M37.5,21 L40.5,21 L40.5,19 L37.5,19 L37.5,21 Z M13.5,21 L16.5,21 L16.5,19 L13.5,19 L13.5,21 Z M19.5,21 L22.5,21 L22.5,19 L19.5,19 L19.5,21 Z M25.5,21 L28.5,21 L28.5,19 L25.5,19 L25.5,21 Z M3,19 L4.5,19 L4.5,21 L4,21 L4,21.5 L2,21.5 L2,20 C2,19.447 2.447,19 3,19 L3,19 Z M2,25.5 L4,25.5 L4,23.5 L2,23.5 L2,25.5 Z M4,28 L4.5,28 L4.5,30 L3,30 C2.447,30 2,29.553 2,29 L2,27.5 L4,27.5 L4,28 Z M19.5,30 L22.5,30 L22.5,28 L19.5,28 L19.5,30 Z M31.5,30 L34.5,30 L34.5,28 L31.5,28 L31.5,30 Z M7.5,30 L10.5,30 L10.5,28 L7.5,28 L7.5,30 Z M13.5,30 L16.5,30 L16.5,28 L13.5,28 L13.5,30 Z M37.5,30 L40.5,30 L40.5,28 L37.5,28 L37.5,30 Z M25.5,30 L28.5,30 L28.5,28 L25.5,28 L25.5,30 Z M44,27.5 L46,27.5 L46,29 C46,29.553 45.553,30 45,30 L43.5,30 L43.5,28 L44,28 L44,27.5 Z M4,15 L44,15 L44,7 L4,7 L4,15 Z M45,5 L3,5 C2.447,5 2,5.447 2,6 L2,16 C2,16.553 2.447,17 3,17 L45,17 C45.553,17 46,16.553 46,16 L46,6 C46,5.447 45.553,5 45,5 L45,5 Z" id="Amazon-Simple-Notification-Service_Topic_Resource-Icon_light-bg" fill="#B0084D"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={6}>
            <Description label='Category'>Topic</Description>
          </Col>
          <Col span={6}>
            <Description label='FIFO'>{resource.fifo ? 'Active' : 'None'}</Description>
          </Col>
          <Col span={6}>
            <Description label='Subscription'>{resource.subscription ? resource.subscription.confirmed : 0}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] SQS */
const SQS: React.FC<any> = ({ resource }): JSX.Element => {
  return (
    <StyledResourceItem>
      <div className='icon'>
        <svg width="48" height="48" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <g id="sqs" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path d="M37.449,22.261 L37.449,26.221 L35.026,24.207 L37.449,22.261 Z M37.81,29.121 C37.993,29.273 38.22,29.352 38.449,29.352 C38.594,29.352 38.738,29.321 38.874,29.257 C39.224,29.092 39.449,28.74 39.449,28.352 L39.449,20.176 C39.449,19.791 39.228,19.441 38.882,19.275 C38.535,19.108 38.123,19.156 37.823,19.397 L32.819,23.414 C32.585,23.602 32.448,23.885 32.4449503,24.185 C32.442,24.486 32.575,24.771 32.806,24.963 L37.81,29.121 Z M10.527,22.307 L12.951,24.322 L10.527,26.267 L10.527,22.307 Z M9.095,29.253 C9.232,29.32 9.38,29.352 9.527,29.352 C9.751,29.352 9.972,29.277 10.153,29.132 L15.158,25.115 C15.392,24.927 15.529,24.644 15.5320497,24.344 C15.535,24.043 15.402,23.758 15.171,23.566 L10.166,19.407 C9.868,19.16 9.453,19.107 9.102,19.271 C8.752,19.436 8.527,19.788 8.527,20.176 L8.527,28.352 C8.527,28.737 8.748,29.087 9.095,29.253 L9.095,29.253 Z M28.368,34.027 L30.368,34.027 L30.368,14.747 L28.368,14.747 L28.368,34.027 Z M23.121,34.027 L25.121,34.027 L25.121,14.747 L23.121,14.747 L23.121,34.027 Z M17.711,34.027 L19.711,34.027 L19.711,14.747 L17.711,14.747 L17.711,34.027 Z M3.999,35.773 L43.977,35.773 L43.977,13.001 L3.999,13.001 L3.999,35.773 Z M44.977,11 L3,11 C2.447,11 2,11.448 2,12 L2,36.773 C2,37.325 2.447,37.773 3,37.773 L44.977,37.773 C45.53,37.773 45.977,37.325 45.977,36.773 L45.977,12 C45.977,11.448 45.53,11 44.977,11 L44.977,11 Z" id="Amazon-Simple-Notification-Service_Queue" fill="#B0084D"></path>
          </g>
        </svg>
      </div>
      <div className='content'>
        <h4 className='subject'>{resource.name}</h4>
        <Row gutter={[8, 6]}>
          <Col span={4}>
            <Description label='Category'>Queue</Description>
          </Col>
          <Col span={4}>
            <Description label='FIFO'>{resource.fifo ? 'Active' : 'None'}</Description>
          </Col>
          <Col span={16}>
            <Description label='URL'>{resource.url}</Description>
          </Col>
        </Row>
      </div>
    </StyledResourceItem>
  );
}
/** [Internal Component] 리소스 설명 */
const Description: React.FC<any> = ({ children, label }): JSX.Element => {
  return (
    <StyledResourceDescription>
      <div className='label'>{label}</div>
      <div className='content'>{children}</div>
    </StyledResourceDescription>
  )
}

export default Resources;